INHERIT: mkdocs.yml
site_description: LeetCode solutions in any programming language
site_dir: site/en
docs_dir: docs-en
theme:
  language: en
  font:
    text: Roboto
    code: Roboto Mono

nav:
  - LeetCode:
    - 1. Two Sum: lc/1.md
    - 2. Add Two Numbers: lc/2.md
    - 3. Longest Substring Without Repeating Characters: lc/3.md
    - 4. Median of Two Sorted Arrays: lc/4.md
    - 5. Longest Palindromic Substring: lc/5.md
    - 6. Zigzag Conversion: lc/6.md
    - 7. Reverse Integer: lc/7.md
    - 8. String to Integer (atoi): lc/8.md
    - 9. Palindrome Number: lc/9.md
    - 10. Regular Expression Matching: lc/10.md
    - 11. Container With Most Water: lc/11.md
    - 12. Integer to Roman: lc/12.md
    - 13. Roman to Integer: lc/13.md
    - 14. Longest Common Prefix: lc/14.md
    - 15. 3Sum: lc/15.md
    - 16. 3Sum Closest: lc/16.md
    - 17. Letter Combinations of a Phone Number: lc/17.md
    - 18. 4Sum: lc/18.md
    - 19. Remove Nth Node From End of List: lc/19.md
    - 20. Valid Parentheses: lc/20.md
    - 21. Merge Two Sorted Lists: lc/21.md
    - 22. Generate Parentheses: lc/22.md
    - 23. Merge k Sorted Lists: lc/23.md
    - 24. Swap Nodes in Pairs: lc/24.md
    - 25. Reverse Nodes in k-Group: lc/25.md
    - 26. Remove Duplicates from Sorted Array: lc/26.md
    - 27. Remove Element: lc/27.md
    - 28. Find the Index of the First Occurrence in a String: lc/28.md
    - 29. Divide Two Integers: lc/29.md
    - 30. Substring with Concatenation of All Words: lc/30.md
    - 31. Next Permutation: lc/31.md
    - 32. Longest Valid Parentheses: lc/32.md
    - 33. Search in Rotated Sorted Array: lc/33.md
    - 34. Find First and Last Position of Element in Sorted Array: lc/34.md
    - 35. Search Insert Position: lc/35.md
    - 36. Valid Sudoku: lc/36.md
    - 37. Sudoku Solver: lc/37.md
    - 38. Count and Say: lc/38.md
    - 39. Combination Sum: lc/39.md
    - 40. Combination Sum II: lc/40.md
    - 41. First Missing Positive: lc/41.md
    - 42. Trapping Rain Water: lc/42.md
    - 43. Multiply Strings: lc/43.md
    - 44. Wildcard Matching: lc/44.md
    - 45. Jump Game II: lc/45.md
    - 46. Permutations: lc/46.md
    - 47. Permutations II: lc/47.md
    - 48. Rotate Image: lc/48.md
    - 49. Group Anagrams: lc/49.md
    - 50. Pow(x, n): lc/50.md
    - 51. N-Queens: lc/51.md
    - 52. N-Queens II: lc/52.md
    - 53. Maximum Subarray: lc/53.md
    - 54. Spiral Matrix: lc/54.md
    - 55. Jump Game: lc/55.md
    - 56. Merge Intervals: lc/56.md
    - 57. Insert Interval: lc/57.md
    - 58. Length of Last Word: lc/58.md
    - 59. Spiral Matrix II: lc/59.md
    - 60. Permutation Sequence: lc/60.md
    - 61. Rotate List: lc/61.md
    - 62. Unique Paths: lc/62.md
    - 63. Unique Paths II: lc/63.md
    - 64. Minimum Path Sum: lc/64.md
    - 65. Valid Number: lc/65.md
    - 66. Plus One: lc/66.md
    - 67. Add Binary: lc/67.md
    - 68. Text Justification: lc/68.md
    - 69. Sqrt(x): lc/69.md
    - 70. Climbing Stairs: lc/70.md
    - 71. Simplify Path: lc/71.md
    - 72. Edit Distance: lc/72.md
    - 73. Set Matrix Zeroes: lc/73.md
    - 74. Search a 2D Matrix: lc/74.md
    - 75. Sort Colors: lc/75.md
    - 76. Minimum Window Substring: lc/76.md
    - 77. Combinations: lc/77.md
    - 78. Subsets: lc/78.md
    - 79. Word Search: lc/79.md
    - 80. Remove Duplicates from Sorted Array II: lc/80.md
    - 81. Search in Rotated Sorted Array II: lc/81.md
    - 82. Remove Duplicates from Sorted List II: lc/82.md
    - 83. Remove Duplicates from Sorted List: lc/83.md
    - 84. Largest Rectangle in Histogram: lc/84.md
    - 85. Maximal Rectangle: lc/85.md
    - 86. Partition List: lc/86.md
    - 87. Scramble String: lc/87.md
    - 88. Merge Sorted Array: lc/88.md
    - 89. Gray Code: lc/89.md
    - 90. Subsets II: lc/90.md
    - 91. Decode Ways: lc/91.md
    - 92. Reverse Linked List II: lc/92.md
    - 93. Restore IP Addresses: lc/93.md
    - 94. Binary Tree Inorder Traversal: lc/94.md
    - 95. Unique Binary Search Trees II: lc/95.md
    - 96. Unique Binary Search Trees: lc/96.md
    - 97. Interleaving String: lc/97.md
    - 98. Validate Binary Search Tree: lc/98.md
    - 99. Recover Binary Search Tree: lc/99.md
    - 100. Same Tree: lc/100.md
    - 101. Symmetric Tree: lc/101.md
    - 102. Binary Tree Level Order Traversal: lc/102.md
    - 103. Binary Tree Zigzag Level Order Traversal: lc/103.md
    - 104. Maximum Depth of Binary Tree: lc/104.md
    - 105. Construct Binary Tree from Preorder and Inorder Traversal: lc/105.md
    - 106. Construct Binary Tree from Inorder and Postorder Traversal: lc/106.md
    - 107. Binary Tree Level Order Traversal II: lc/107.md
    - 108. Convert Sorted Array to Binary Search Tree: lc/108.md
    - 109. Convert Sorted List to Binary Search Tree: lc/109.md
    - 110. Balanced Binary Tree: lc/110.md
    - 111. Minimum Depth of Binary Tree: lc/111.md
    - 112. Path Sum: lc/112.md
    - 113. Path Sum II: lc/113.md
    - 114. Flatten Binary Tree to Linked List: lc/114.md
    - 115. Distinct Subsequences: lc/115.md
    - 116. Populating Next Right Pointers in Each Node: lc/116.md
    - 117. Populating Next Right Pointers in Each Node II: lc/117.md
    - 118. Pascal's Triangle: lc/118.md
    - 119. Pascal's Triangle II: lc/119.md
    - 120. Triangle: lc/120.md
    - 121. Best Time to Buy and Sell Stock: lc/121.md
    - 122. Best Time to Buy and Sell Stock II: lc/122.md
    - 123. Best Time to Buy and Sell Stock III: lc/123.md
    - 124. Binary Tree Maximum Path Sum: lc/124.md
    - 125. Valid Palindrome: lc/125.md
    - 126. Word Ladder II: lc/126.md
    - 127. Word Ladder: lc/127.md
    - 128. Longest Consecutive Sequence: lc/128.md
    - 129. Sum Root to Leaf Numbers: lc/129.md
    - 130. Surrounded Regions: lc/130.md
    - 131. Palindrome Partitioning: lc/131.md
    - 132. Palindrome Partitioning II: lc/132.md
    - 133. Clone Graph: lc/133.md
    - 134. Gas Station: lc/134.md
    - 135. Candy: lc/135.md
    - 136. Single Number: lc/136.md
    - 137. Single Number II: lc/137.md
    - 138. Copy List with Random Pointer: lc/138.md
    - 139. Word Break: lc/139.md
    - 140. Word Break II: lc/140.md
    - 141. Linked List Cycle: lc/141.md
    - 142. Linked List Cycle II: lc/142.md
    - 143. Reorder List: lc/143.md
    - 144. Binary Tree Preorder Traversal: lc/144.md
    - 145. Binary Tree Postorder Traversal: lc/145.md
    - 146. LRU Cache: lc/146.md
    - 147. Insertion Sort List: lc/147.md
    - 148. Sort List: lc/148.md
    - 149. Max Points on a Line: lc/149.md
    - 150. Evaluate Reverse Polish Notation: lc/150.md
    - 151. Reverse Words in a String: lc/151.md
    - 152. Maximum Product Subarray: lc/152.md
    - 153. Find Minimum in Rotated Sorted Array: lc/153.md
    - 154. Find Minimum in Rotated Sorted Array II: lc/154.md
    - 155. Min Stack: lc/155.md
    - 156. Binary Tree Upside Down: lc/156.md
    - 157. Read N Characters Given Read4: lc/157.md
    - 158. Read N Characters Given read4 II - Call Multiple Times: lc/158.md
    - 159. Longest Substring with At Most Two Distinct Characters: lc/159.md
    - 160. Intersection of Two Linked Lists: lc/160.md
    - 161. One Edit Distance: lc/161.md
    - 162. Find Peak Element: lc/162.md
    - 163. Missing Ranges: lc/163.md
    - 164. Maximum Gap: lc/164.md
    - 165. Compare Version Numbers: lc/165.md
    - 166. Fraction to Recurring Decimal: lc/166.md
    - 167. Two Sum II - Input Array Is Sorted: lc/167.md
    - 168. Excel Sheet Column Title: lc/168.md
    - 169. Majority Element: lc/169.md
    - 170. Two Sum III - Data structure design: lc/170.md
    - 171. Excel Sheet Column Number: lc/171.md
    - 172. Factorial Trailing Zeroes: lc/172.md
    - 173. Binary Search Tree Iterator: lc/173.md
    - 174. Dungeon Game: lc/174.md
    - 175. Combine Two Tables: lc/175.md
    - 176. Second Highest Salary: lc/176.md
    - 177. Nth Highest Salary: lc/177.md
    - 178. Rank Scores: lc/178.md
    - 179. Largest Number: lc/179.md
    - 180. Consecutive Numbers: lc/180.md
    - 181. Employees Earning More Than Their Managers: lc/181.md
    - 182. Duplicate Emails: lc/182.md
    - 183. Customers Who Never Order: lc/183.md
    - 184. Department Highest Salary: lc/184.md
    - 185. Department Top Three Salaries: lc/185.md
    - 186. Reverse Words in a String II: lc/186.md
    - 187. Repeated DNA Sequences: lc/187.md
    - 188. Best Time to Buy and Sell Stock IV: lc/188.md
    - 189. Rotate Array: lc/189.md
    - 190. Reverse Bits: lc/190.md
    - 191. Number of 1 Bits: lc/191.md
    - 192. Word Frequency: lc/192.md
    - 193. Valid Phone Numbers: lc/193.md
    - 194. Transpose File: lc/194.md
    - 195. Tenth Line: lc/195.md
    - 196. Delete Duplicate Emails: lc/196.md
    - 197. Rising Temperature: lc/197.md
    - 198. House Robber: lc/198.md
    - 199. Binary Tree Right Side View: lc/199.md
    - 200. Number of Islands: lc/200.md
    - 201. Bitwise AND of Numbers Range: lc/201.md
    - 202. Happy Number: lc/202.md
    - 203. Remove Linked List Elements: lc/203.md
    - 204. Count Primes: lc/204.md
    - 205. Isomorphic Strings: lc/205.md
    - 206. Reverse Linked List: lc/206.md
    - 207. Course Schedule: lc/207.md
    - 208. Implement Trie (Prefix Tree): lc/208.md
    - 209. Minimum Size Subarray Sum: lc/209.md
    - 210. Course Schedule II: lc/210.md
    - 211. Design Add and Search Words Data Structure: lc/211.md
    - 212. Word Search II: lc/212.md
    - 213. House Robber II: lc/213.md
    - 214. Shortest Palindrome: lc/214.md
    - 215. Kth Largest Element in an Array: lc/215.md
    - 216. Combination Sum III: lc/216.md
    - 217. Contains Duplicate: lc/217.md
    - 218. The Skyline Problem: lc/218.md
    - 219. Contains Duplicate II: lc/219.md
    - 220. Contains Duplicate III: lc/220.md
    - 221. Maximal Square: lc/221.md
    - 222. Count Complete Tree Nodes: lc/222.md
    - 223. Rectangle Area: lc/223.md
    - 224. Basic Calculator: lc/224.md
    - 225. Implement Stack using Queues: lc/225.md
    - 226. Invert Binary Tree: lc/226.md
    - 227. Basic Calculator II: lc/227.md
    - 228. Summary Ranges: lc/228.md
    - 229. Majority Element II: lc/229.md
    - 230. Kth Smallest Element in a BST: lc/230.md
    - 231. Power of Two: lc/231.md
    - 232. Implement Queue using Stacks: lc/232.md
    - 233. Number of Digit One: lc/233.md
    - 234. Palindrome Linked List: lc/234.md
    - 235. Lowest Common Ancestor of a Binary Search Tree: lc/235.md
    - 236. Lowest Common Ancestor of a Binary Tree: lc/236.md
    - 237. Delete Node in a Linked List: lc/237.md
    - 238. Product of Array Except Self: lc/238.md
    - 239. Sliding Window Maximum: lc/239.md
    - 240. Search a 2D Matrix II: lc/240.md
    - 241. Different Ways to Add Parentheses: lc/241.md
    - 242. Valid Anagram: lc/242.md
    - 243. Shortest Word Distance: lc/243.md
    - 244. Shortest Word Distance II: lc/244.md
    - 245. Shortest Word Distance III: lc/245.md
    - 246. Strobogrammatic Number: lc/246.md
    - 247. Strobogrammatic Number II: lc/247.md
    - 248. Strobogrammatic Number III: lc/248.md
    - 249. Group Shifted Strings: lc/249.md
    - 250. Count Univalue Subtrees: lc/250.md
    - 251. Flatten 2D Vector: lc/251.md
    - 252. Meeting Rooms: lc/252.md
    - 253. Meeting Rooms II: lc/253.md
    - 254. Factor Combinations: lc/254.md
    - 255. Verify Preorder Sequence in Binary Search Tree: lc/255.md
    - 256. Paint House: lc/256.md
    - 257. Binary Tree Paths: lc/257.md
    - 258. Add Digits: lc/258.md
    - 259. 3Sum Smaller: lc/259.md
    - 260. Single Number III: lc/260.md
    - 261. Graph Valid Tree: lc/261.md
    - 262. Trips and Users: lc/262.md
    - 263. Ugly Number: lc/263.md
    - 264. Ugly Number II: lc/264.md
    - 265. Paint House II: lc/265.md
    - 266. Palindrome Permutation: lc/266.md
    - 267. Palindrome Permutation II: lc/267.md
    - 268. Missing Number: lc/268.md
    - 269. Alien Dictionary: lc/269.md
    - 270. Closest Binary Search Tree Value: lc/270.md
    - 271. Encode and Decode Strings: lc/271.md
    - 272. Closest Binary Search Tree Value II: lc/272.md
    - 273. Integer to English Words: lc/273.md
    - 274. H-Index: lc/274.md
    - 275. H-Index II: lc/275.md
    - 276. Paint Fence: lc/276.md
    - 277. Find the Celebrity: lc/277.md
    - 278. First Bad Version: lc/278.md
    - 279. Perfect Squares: lc/279.md
    - 280. Wiggle Sort: lc/280.md
    - 281. Zigzag Iterator: lc/281.md
    - 282. Expression Add Operators: lc/282.md
    - 283. Move Zeroes: lc/283.md
    - 284. Peeking Iterator: lc/284.md
    - 285. Inorder Successor in BST: lc/285.md
    - 286. Walls and Gates: lc/286.md
    - 287. Find the Duplicate Number: lc/287.md
    - 288. Unique Word Abbreviation: lc/288.md
    - 289. Game of Life: lc/289.md
    - 290. Word Pattern: lc/290.md
    - 291. Word Pattern II: lc/291.md
    - 292. Nim Game: lc/292.md
    - 293. Flip Game: lc/293.md
    - 294. Flip Game II: lc/294.md
    - 295. Find Median from Data Stream: lc/295.md
    - 296. Best Meeting Point: lc/296.md
    - 297. Serialize and Deserialize Binary Tree: lc/297.md
    - 298. Binary Tree Longest Consecutive Sequence: lc/298.md
    - 299. Bulls and Cows: lc/299.md
    - 300. Longest Increasing Subsequence: lc/300.md
    - 301. Remove Invalid Parentheses: lc/301.md
    - 302. Smallest Rectangle Enclosing Black Pixels: lc/302.md
    - 303. Range Sum Query - Immutable: lc/303.md
    - 304. Range Sum Query 2D - Immutable: lc/304.md
    - 305. Number of Islands II: lc/305.md
    - 306. Additive Number: lc/306.md
    - 307. Range Sum Query - Mutable: lc/307.md
    - 308. Range Sum Query 2D - Mutable: lc/308.md
    - 309. Best Time to Buy and Sell Stock with Cooldown: lc/309.md
    - 310. Minimum Height Trees: lc/310.md
    - 311. Sparse Matrix Multiplication: lc/311.md
    - 312. Burst Balloons: lc/312.md
    - 313. Super Ugly Number: lc/313.md
    - 314. Binary Tree Vertical Order Traversal: lc/314.md
    - 315. Count of Smaller Numbers After Self: lc/315.md
    - 316. Remove Duplicate Letters: lc/316.md
    - 317. Shortest Distance from All Buildings: lc/317.md
    - 318. Maximum Product of Word Lengths: lc/318.md
    - 319. Bulb Switcher: lc/319.md
    - 320. Generalized Abbreviation: lc/320.md
    - 321. Create Maximum Number: lc/321.md
    - 322. Coin Change: lc/322.md
    - 323. Number of Connected Components in an Undirected Graph: lc/323.md
    - 324. Wiggle Sort II: lc/324.md
    - 325. Maximum Size Subarray Sum Equals k: lc/325.md
    - 326. Power of Three: lc/326.md
    - 327. Count of Range Sum: lc/327.md
    - 328. Odd Even Linked List: lc/328.md
    - 329. Longest Increasing Path in a Matrix: lc/329.md
    - 330. Patching Array: lc/330.md
    - 331. Verify Preorder Serialization of a Binary Tree: lc/331.md
    - 332. Reconstruct Itinerary: lc/332.md
    - 333. Largest BST Subtree: lc/333.md
    - 334. Increasing Triplet Subsequence: lc/334.md
    - 335. Self Crossing: lc/335.md
    - 336. Palindrome Pairs: lc/336.md
    - 337. House Robber III: lc/337.md
    - 338. Counting Bits: lc/338.md
    - 339. Nested List Weight Sum: lc/339.md
    - 340. Longest Substring with At Most K Distinct Characters: lc/340.md
    - 341. Flatten Nested List Iterator: lc/341.md
    - 342. Power of Four: lc/342.md
    - 343. Integer Break: lc/343.md
    - 344. Reverse String: lc/344.md
    - 345. Reverse Vowels of a String: lc/345.md
    - 346. Moving Average from Data Stream: lc/346.md
    - 347. Top K Frequent Elements: lc/347.md
    - 348. Design Tic-Tac-Toe: lc/348.md
    - 349. Intersection of Two Arrays: lc/349.md
    - 350. Intersection of Two Arrays II: lc/350.md
    - 351. Android Unlock Patterns: lc/351.md
    - 352. Data Stream as Disjoint Intervals: lc/352.md
    - 353. Design Snake Game: lc/353.md
    - 354. Russian Doll Envelopes: lc/354.md
    - 355. Design Twitter: lc/355.md
    - 356. Line Reflection: lc/356.md
    - 357. Count Numbers with Unique Digits: lc/357.md
    - 358. Rearrange String k Distance Apart: lc/358.md
    - 359. Logger Rate Limiter: lc/359.md
    - 360. Sort Transformed Array: lc/360.md
    - 361. Bomb Enemy: lc/361.md
    - 362. Design Hit Counter: lc/362.md
    - 363. Max Sum of Rectangle No Larger Than K: lc/363.md
    - 364. Nested List Weight Sum II: lc/364.md
    - 365. Water and Jug Problem: lc/365.md
    - 366. Find Leaves of Binary Tree: lc/366.md
    - 367. Valid Perfect Square: lc/367.md
    - 368. Largest Divisible Subset: lc/368.md
    - 369. Plus One Linked List: lc/369.md
    - 370. Range Addition: lc/370.md
    - 371. Sum of Two Integers: lc/371.md
    - 372. Super Pow: lc/372.md
    - 373. Find K Pairs with Smallest Sums: lc/373.md
    - 374. Guess Number Higher or Lower: lc/374.md
    - 375. Guess Number Higher or Lower II: lc/375.md
    - 376. Wiggle Subsequence: lc/376.md
    - 377. Combination Sum IV: lc/377.md
    - 378. Kth Smallest Element in a Sorted Matrix: lc/378.md
    - 379. Design Phone Directory: lc/379.md
    - 380. Insert Delete GetRandom O(1): lc/380.md
    - 381. Insert Delete GetRandom O(1) - Duplicates allowed: lc/381.md
    - 382. Linked List Random Node: lc/382.md
    - 383. Ransom Note: lc/383.md
    - 384. Shuffle an Array: lc/384.md
    - 385. Mini Parser: lc/385.md
    - 386. Lexicographical Numbers: lc/386.md
    - 387. First Unique Character in a String: lc/387.md
    - 388. Longest Absolute File Path: lc/388.md
    - 389. Find the Difference: lc/389.md
    - 390. Elimination Game: lc/390.md
    - 391. Perfect Rectangle: lc/391.md
    - 392. Is Subsequence: lc/392.md
    - 393. UTF-8 Validation: lc/393.md
    - 394. Decode String: lc/394.md
    - 395. Longest Substring with At Least K Repeating Characters: lc/395.md
    - 396. Rotate Function: lc/396.md
    - 397. Integer Replacement: lc/397.md
    - 398. Random Pick Index: lc/398.md
    - 399. Evaluate Division: lc/399.md
    - 400. Nth Digit: lc/400.md
    - 401. Binary Watch: lc/401.md
    - 402. Remove K Digits: lc/402.md
    - 403. Frog Jump: lc/403.md
    - 404. Sum of Left Leaves: lc/404.md
    - 405. Convert a Number to Hexadecimal: lc/405.md
    - 406. Queue Reconstruction by Height: lc/406.md
    - 407. Trapping Rain Water II: lc/407.md
    - 408. Valid Word Abbreviation: lc/408.md
    - 409. Longest Palindrome: lc/409.md
    - 410. Split Array Largest Sum: lc/410.md
    - 411. Minimum Unique Word Abbreviation: lc/411.md
    - 412. Fizz Buzz: lc/412.md
    - 413. Arithmetic Slices: lc/413.md
    - 414. Third Maximum Number: lc/414.md
    - 415. Add Strings: lc/415.md
    - 416. Partition Equal Subset Sum: lc/416.md
    - 417. Pacific Atlantic Water Flow: lc/417.md
    - 418. Sentence Screen Fitting: lc/418.md
    - 419. Battleships in a Board: lc/419.md
    - 420. Strong Password Checker: lc/420.md
    - 421. Maximum XOR of Two Numbers in an Array: lc/421.md
    - 422. Valid Word Square: lc/422.md
    - 423. Reconstruct Original Digits from English: lc/423.md
    - 424. Longest Repeating Character Replacement: lc/424.md
    - 425. Word Squares: lc/425.md
    - 426. Convert Binary Search Tree to Sorted Doubly Linked List: lc/426.md
    - 427. Construct Quad Tree: lc/427.md
    - 428. Serialize and Deserialize N-ary Tree: lc/428.md
    - 429. N-ary Tree Level Order Traversal: lc/429.md
    - 430. Flatten a Multilevel Doubly Linked List: lc/430.md
    - 431. Encode N-ary Tree to Binary Tree: lc/431.md
    - 432. All O`one Data Structure: lc/432.md
    - 433. Minimum Genetic Mutation: lc/433.md
    - 434. Number of Segments in a String: lc/434.md
    - 435. Non-overlapping Intervals: lc/435.md
    - 436. Find Right Interval: lc/436.md
    - 437. Path Sum III: lc/437.md
    - 438. Find All Anagrams in a String: lc/438.md
    - 439. Ternary Expression Parser: lc/439.md
    - 440. K-th Smallest in Lexicographical Order: lc/440.md
    - 441. Arranging Coins: lc/441.md
    - 442. Find All Duplicates in an Array: lc/442.md
    - 443. String Compression: lc/443.md
    - 444. Sequence Reconstruction: lc/444.md
    - 445. Add Two Numbers II: lc/445.md
    - 446. Arithmetic Slices II - Subsequence: lc/446.md
    - 447. Number of Boomerangs: lc/447.md
    - 448. Find All Numbers Disappeared in an Array: lc/448.md
    - 449. Serialize and Deserialize BST: lc/449.md
    - 450. Delete Node in a BST: lc/450.md
    - 451. Sort Characters By Frequency: lc/451.md
    - 452. Minimum Number of Arrows to Burst Balloons: lc/452.md
    - 453. Minimum Moves to Equal Array Elements: lc/453.md
    - 454. 4Sum II: lc/454.md
    - 455. Assign Cookies: lc/455.md
    - 456. 132 Pattern: lc/456.md
    - 457. Circular Array Loop: lc/457.md
    - 458. Poor Pigs: lc/458.md
    - 459. Repeated Substring Pattern: lc/459.md
    - 460. LFU Cache: lc/460.md
    - 461. Hamming Distance: lc/461.md
    - 462. Minimum Moves to Equal Array Elements II: lc/462.md
    - 463. Island Perimeter: lc/463.md
    - 464. Can I Win: lc/464.md
    - 465. Optimal Account Balancing: lc/465.md
    - 466. Count The Repetitions: lc/466.md
    - 467. Unique Substrings in Wraparound String: lc/467.md
    - 468. Validate IP Address: lc/468.md
    - 469. Convex Polygon: lc/469.md
    - 470. Implement Rand10() Using Rand7(): lc/470.md
    - 471. Encode String with Shortest Length: lc/471.md
    - 472. Concatenated Words: lc/472.md
    - 473. Matchsticks to Square: lc/473.md
    - 474. Ones and Zeroes: lc/474.md
    - 475. Heaters: lc/475.md
    - 476. Number Complement: lc/476.md
    - 477. Total Hamming Distance: lc/477.md
    - 478. Generate Random Point in a Circle: lc/478.md
    - 479. Largest Palindrome Product: lc/479.md
    - 480. Sliding Window Median: lc/480.md
    - 481. Magical String: lc/481.md
    - 482. License Key Formatting: lc/482.md
    - 483. Smallest Good Base: lc/483.md
    - 484. Find Permutation: lc/484.md
    - 485. Max Consecutive Ones: lc/485.md
    - 486. Predict the Winner: lc/486.md
    - 487. Max Consecutive Ones II: lc/487.md
    - 488. Zuma Game: lc/488.md
    - 489. Robot Room Cleaner: lc/489.md
    - 490. The Maze: lc/490.md
    - 491. Non-decreasing Subsequences: lc/491.md
    - 492. Construct the Rectangle: lc/492.md
    - 493. Reverse Pairs: lc/493.md
    - 494. Target Sum: lc/494.md
    - 495. Teemo Attacking: lc/495.md
    - 496. Next Greater Element I: lc/496.md
    - 497. Random Point in Non-overlapping Rectangles: lc/497.md
    - 498. Diagonal Traverse: lc/498.md
    - 499. The Maze III: lc/499.md
    - 500. Keyboard Row: lc/500.md
    - 501. Find Mode in Binary Search Tree: lc/501.md
    - 502. IPO: lc/502.md
    - 503. Next Greater Element II: lc/503.md
    - 504. Base 7: lc/504.md
    - 505. The Maze II: lc/505.md
    - 506. Relative Ranks: lc/506.md
    - 507. Perfect Number: lc/507.md
    - 508. Most Frequent Subtree Sum: lc/508.md
    - 509. Fibonacci Number: lc/509.md
    - 510. Inorder Successor in BST II: lc/510.md
    - 511. Game Play Analysis I: lc/511.md
    - 512. Game Play Analysis II: lc/512.md
    - 513. Find Bottom Left Tree Value: lc/513.md
    - 514. Freedom Trail: lc/514.md
    - 515. Find Largest Value in Each Tree Row: lc/515.md
    - 516. Longest Palindromic Subsequence: lc/516.md
    - 517. Super Washing Machines: lc/517.md
    - 518. Coin Change II: lc/518.md
    - 519. Random Flip Matrix: lc/519.md
    - 520. Detect Capital: lc/520.md
    - 521. Longest Uncommon Subsequence I: lc/521.md
    - 522. Longest Uncommon Subsequence II: lc/522.md
    - 523. Continuous Subarray Sum: lc/523.md
    - 524. Longest Word in Dictionary through Deleting: lc/524.md
    - 525. Contiguous Array: lc/525.md
    - 526. Beautiful Arrangement: lc/526.md
    - 527. Word Abbreviation: lc/527.md
    - 528. Random Pick with Weight: lc/528.md
    - 529. Minesweeper: lc/529.md
    - 530. Minimum Absolute Difference in BST: lc/530.md
    - 531. Lonely Pixel I: lc/531.md
    - 532. K-diff Pairs in an Array: lc/532.md
    - 533. Lonely Pixel II: lc/533.md
    - 534. Game Play Analysis III: lc/534.md
    - 535. Encode and Decode TinyURL: lc/535.md
    - 536. Construct Binary Tree from String: lc/536.md
    - 537. Complex Number Multiplication: lc/537.md
    - 538. Convert BST to Greater Tree: lc/538.md
    - 539. Minimum Time Difference: lc/539.md
    - 540. Single Element in a Sorted Array: lc/540.md
    - 541. Reverse String II: lc/541.md
    - 542. 1 Matrix: lc/542.md
    - 543. Diameter of Binary Tree: lc/543.md
    - 544. Output Contest Matches: lc/544.md
    - 545. Boundary of Binary Tree: lc/545.md
    - 546. Remove Boxes: lc/546.md
    - 547. Number of Provinces: lc/547.md
    - 548. Split Array with Equal Sum: lc/548.md
    - 549. Binary Tree Longest Consecutive Sequence II: lc/549.md
    - 550. Game Play Analysis IV: lc/550.md
    - 551. Student Attendance Record I: lc/551.md
    - 552. Student Attendance Record II: lc/552.md
    - 553. Optimal Division: lc/553.md
    - 554. Brick Wall: lc/554.md
    - 555. Split Concatenated Strings: lc/555.md
    - 556. Next Greater Element III: lc/556.md
    - 557. Reverse Words in a String III: lc/557.md
    - 558. Logical OR of Two Binary Grids Represented as Quad-Trees: lc/558.md
    - 559. Maximum Depth of N-ary Tree: lc/559.md
    - 560. Subarray Sum Equals K: lc/560.md
    - 561. Array Partition: lc/561.md
    - 562. Longest Line of Consecutive One in Matrix: lc/562.md
    - 563. Binary Tree Tilt: lc/563.md
    - 564. Find the Closest Palindrome: lc/564.md
    - 565. Array Nesting: lc/565.md
    - 566. Reshape the Matrix: lc/566.md
    - 567. Permutation in String: lc/567.md
    - 568. Maximum Vacation Days: lc/568.md
    - 569. Median Employee Salary: lc/569.md
    - 570. Managers with at Least 5 Direct Reports: lc/570.md
    - 571. Find Median Given Frequency of Numbers: lc/571.md
    - 572. Subtree of Another Tree: lc/572.md
    - 573. Squirrel Simulation: lc/573.md
    - 574. Winning Candidate: lc/574.md
    - 575. Distribute Candies: lc/575.md
    - 576. Out of Boundary Paths: lc/576.md
    - 577. Employee Bonus: lc/577.md
    - 578. Get Highest Answer Rate Question: lc/578.md
    - 579. Find Cumulative Salary of an Employee: lc/579.md
    - 580. Count Student Number in Departments: lc/580.md
    - 581. Shortest Unsorted Continuous Subarray: lc/581.md
    - 582. Kill Process: lc/582.md
    - 583. Delete Operation for Two Strings: lc/583.md
    - 584. Find Customer Referee: lc/584.md
    - 585. Investments in 2016: lc/585.md
    - 586. Customer Placing the Largest Number of Orders: lc/586.md
    - 587. Erect the Fence: lc/587.md
    - 588. Design In-Memory File System: lc/588.md
    - 589. N-ary Tree Preorder Traversal: lc/589.md
    - 590. N-ary Tree Postorder Traversal: lc/590.md
    - 591. Tag Validator: lc/591.md
    - 592. Fraction Addition and Subtraction: lc/592.md
    - 593. Valid Square: lc/593.md
    - 594. Longest Harmonious Subsequence: lc/594.md
    - 595. Big Countries: lc/595.md
    - 596. Classes More Than 5 Students: lc/596.md
    - 597. Friend Requests I Overall Acceptance Rate: lc/597.md
    - 598. Range Addition II: lc/598.md
    - 599. Minimum Index Sum of Two Lists: lc/599.md
    - 600. Non-negative Integers without Consecutive Ones: lc/600.md
    - 601. Human Traffic of Stadium: lc/601.md
    - 602. Friend Requests II Who Has the Most Friends: lc/602.md
    - 603. Consecutive Available Seats: lc/603.md
    - 604. Design Compressed String Iterator: lc/604.md
    - 605. Can Place Flowers: lc/605.md
    - 606. Construct String from Binary Tree: lc/606.md
    - 607. Sales Person: lc/607.md
    - 608. Tree Node: lc/608.md
    - 609. Find Duplicate File in System: lc/609.md
    - 610. Triangle Judgement: lc/610.md
    - 611. Valid Triangle Number: lc/611.md
    - 612. Shortest Distance in a Plane: lc/612.md
    - 613. Shortest Distance in a Line: lc/613.md
    - 614. Second Degree Follower: lc/614.md
    - 615. Average Salary Departments VS Company: lc/615.md
    - 616. Add Bold Tag in String: lc/616.md
    - 617. Merge Two Binary Trees: lc/617.md
    - 618. Students Report By Geography: lc/618.md
    - 619. Biggest Single Number: lc/619.md
    - 620. Not Boring Movies: lc/620.md
    - 621. Task Scheduler: lc/621.md
    - 622. Design Circular Queue: lc/622.md
    - 623. Add One Row to Tree: lc/623.md
    - 624. Maximum Distance in Arrays: lc/624.md
    - 625. Minimum Factorization: lc/625.md
    - 626. Exchange Seats: lc/626.md
    - 627. Swap Salary: lc/627.md
    - 628. Maximum Product of Three Numbers: lc/628.md
    - 629. K Inverse Pairs Array: lc/629.md
    - 630. Course Schedule III: lc/630.md
    - 631. Design Excel Sum Formula: lc/631.md
    - 632. Smallest Range Covering Elements from K Lists: lc/632.md
    - 633. Sum of Square Numbers: lc/633.md
    - 634. Find the Derangement of An Array: lc/634.md
    - 635. Design Log Storage System: lc/635.md
    - 636. Exclusive Time of Functions: lc/636.md
    - 637. Average of Levels in Binary Tree: lc/637.md
    - 638. Shopping Offers: lc/638.md
    - 639. Decode Ways II: lc/639.md
    - 640. Solve the Equation: lc/640.md
    - 641. Design Circular Deque: lc/641.md
    - 642. Design Search Autocomplete System: lc/642.md
    - 643. Maximum Average Subarray I: lc/643.md
    - 644. Maximum Average Subarray II: lc/644.md
    - 645. Set Mismatch: lc/645.md
    - 646. Maximum Length of Pair Chain: lc/646.md
    - 647. Palindromic Substrings: lc/647.md
    - 648. Replace Words: lc/648.md
    - 649. Dota2 Senate: lc/649.md
    - 650. 2 Keys Keyboard: lc/650.md
    - 651. 4 Keys Keyboard: lc/651.md
    - 652. Find Duplicate Subtrees: lc/652.md
    - 653. Two Sum IV - Input is a BST: lc/653.md
    - 654. Maximum Binary Tree: lc/654.md
    - 655. Print Binary Tree: lc/655.md
    - 656. Coin Path: lc/656.md
    - 657. Robot Return to Origin: lc/657.md
    - 658. Find K Closest Elements: lc/658.md
    - 659. Split Array into Consecutive Subsequences: lc/659.md
    - 660. Remove 9: lc/660.md
    - 661. Image Smoother: lc/661.md
    - 662. Maximum Width of Binary Tree: lc/662.md
    - 663. Equal Tree Partition: lc/663.md
    - 664. Strange Printer: lc/664.md
    - 665. Non-decreasing Array: lc/665.md
    - 666. Path Sum IV: lc/666.md
    - 667. Beautiful Arrangement II: lc/667.md
    - 668. Kth Smallest Number in Multiplication Table: lc/668.md
    - 669. Trim a Binary Search Tree: lc/669.md
    - 670. Maximum Swap: lc/670.md
    - 671. Second Minimum Node In a Binary Tree: lc/671.md
    - 672. Bulb Switcher II: lc/672.md
    - 673. Number of Longest Increasing Subsequence: lc/673.md
    - 674. Longest Continuous Increasing Subsequence: lc/674.md
    - 675. Cut Off Trees for Golf Event: lc/675.md
    - 676. Implement Magic Dictionary: lc/676.md
    - 677. Map Sum Pairs: lc/677.md
    - 678. Valid Parenthesis String: lc/678.md
    - 679. 24 Game: lc/679.md
    - 680. Valid Palindrome II: lc/680.md
    - 681. Next Closest Time: lc/681.md
    - 682. Baseball Game: lc/682.md
    - 683. K Empty Slots: lc/683.md
    - 684. Redundant Connection: lc/684.md
    - 685. Redundant Connection II: lc/685.md
    - 686. Repeated String Match: lc/686.md
    - 687. Longest Univalue Path: lc/687.md
    - 688. Knight Probability in Chessboard: lc/688.md
    - 689. Maximum Sum of 3 Non-Overlapping Subarrays: lc/689.md
    - 690. Employee Importance: lc/690.md
    - 691. Stickers to Spell Word: lc/691.md
    - 692. Top K Frequent Words: lc/692.md
    - 693. Binary Number with Alternating Bits: lc/693.md
    - 694. Number of Distinct Islands: lc/694.md
    - 695. Max Area of Island: lc/695.md
    - 696. Count Binary Substrings: lc/696.md
    - 697. Degree of an Array: lc/697.md
    - 698. Partition to K Equal Sum Subsets: lc/698.md
    - 699. Falling Squares: lc/699.md
    - 700. Search in a Binary Search Tree: lc/700.md
    - 701. Insert into a Binary Search Tree: lc/701.md
    - 702. Search in a Sorted Array of Unknown Size: lc/702.md
    - 703. Kth Largest Element in a Stream: lc/703.md
    - 704. Binary Search: lc/704.md
    - 705. Design HashSet: lc/705.md
    - 706. Design HashMap: lc/706.md
    - 707. Design Linked List: lc/707.md
    - 708. Insert into a Sorted Circular Linked List: lc/708.md
    - 709. To Lower Case: lc/709.md
    - 710. Random Pick with Blacklist: lc/710.md
    - 711. Number of Distinct Islands II: lc/711.md
    - 712. Minimum ASCII Delete Sum for Two Strings: lc/712.md
    - 713. Subarray Product Less Than K: lc/713.md
    - 714. Best Time to Buy and Sell Stock with Transaction Fee: lc/714.md
    - 715. Range Module: lc/715.md
    - 716. Max Stack: lc/716.md
    - 717. 1-bit and 2-bit Characters: lc/717.md
    - 718. Maximum Length of Repeated Subarray: lc/718.md
    - 719. Find K-th Smallest Pair Distance: lc/719.md
    - 720. Longest Word in Dictionary: lc/720.md
    - 721. Accounts Merge: lc/721.md
    - 722. Remove Comments: lc/722.md
    - 723. Candy Crush: lc/723.md
    - 724. Find Pivot Index: lc/724.md
    - 725. Split Linked List in Parts: lc/725.md
    - 726. Number of Atoms: lc/726.md
    - 727. Minimum Window Subsequence: lc/727.md
    - 728. Self Dividing Numbers: lc/728.md
    - 729. My Calendar I: lc/729.md
    - 730. Count Different Palindromic Subsequences: lc/730.md
    - 731. My Calendar II: lc/731.md
    - 732. My Calendar III: lc/732.md
    - 733. Flood Fill: lc/733.md
    - 734. Sentence Similarity: lc/734.md
    - 735. Asteroid Collision: lc/735.md
    - 736. Parse Lisp Expression: lc/736.md
    - 737. Sentence Similarity II: lc/737.md
    - 738. Monotone Increasing Digits: lc/738.md
    - 739. Daily Temperatures: lc/739.md
    - 740. Delete and Earn: lc/740.md
    - 741. Cherry Pickup: lc/741.md
    - 742. Closest Leaf in a Binary Tree: lc/742.md
    - 743. Network Delay Time: lc/743.md
    - 744. Find Smallest Letter Greater Than Target: lc/744.md
    - 745. Prefix and Suffix Search: lc/745.md
    - 746. Min Cost Climbing Stairs: lc/746.md
    - 747. Largest Number At Least Twice of Others: lc/747.md
    - 748. Shortest Completing Word: lc/748.md
    - 749. Contain Virus: lc/749.md
    - 750. Number Of Corner Rectangles: lc/750.md
    - 751. IP to CIDR: lc/751.md
    - 752. Open the Lock: lc/752.md
    - 753. Cracking the Safe: lc/753.md
    - 754. Reach a Number: lc/754.md
    - 755. Pour Water: lc/755.md
    - 756. Pyramid Transition Matrix: lc/756.md
    - 757. Set Intersection Size At Least Two: lc/757.md
    - 758. Bold Words in String: lc/758.md
    - 759. Employee Free Time: lc/759.md
    - 760. Find Anagram Mappings: lc/760.md
    - 761. Special Binary String: lc/761.md
    - 762. Prime Number of Set Bits in Binary Representation: lc/762.md
    - 763. Partition Labels: lc/763.md
    - 764. Largest Plus Sign: lc/764.md
    - 765. Couples Holding Hands: lc/765.md
    - 766. Toeplitz Matrix: lc/766.md
    - 767. Reorganize String: lc/767.md
    - 768. Max Chunks To Make Sorted II: lc/768.md
    - 769. Max Chunks To Make Sorted: lc/769.md
    - 770. Basic Calculator IV: lc/770.md
    - 771. Jewels and Stones: lc/771.md
    - 772. Basic Calculator III: lc/772.md
    - 773. Sliding Puzzle: lc/773.md
    - 774. Minimize Max Distance to Gas Station: lc/774.md
    - 775. Global and Local Inversions: lc/775.md
    - 776. Split BST: lc/776.md
    - 777. Swap Adjacent in LR String: lc/777.md
    - 778. Swim in Rising Water: lc/778.md
    - 779. K-th Symbol in Grammar: lc/779.md
    - 780. Reaching Points: lc/780.md
    - 781. Rabbits in Forest: lc/781.md
    - 782. Transform to Chessboard: lc/782.md
    - 783. Minimum Distance Between BST Nodes: lc/783.md
    - 784. Letter Case Permutation: lc/784.md
    - 785. Is Graph Bipartite: lc/785.md
    - 786. K-th Smallest Prime Fraction: lc/786.md
    - 787. Cheapest Flights Within K Stops: lc/787.md
    - 788. Rotated Digits: lc/788.md
    - 789. Escape The Ghosts: lc/789.md
    - 790. Domino and Tromino Tiling: lc/790.md
    - 791. Custom Sort String: lc/791.md
    - 792. Number of Matching Subsequences: lc/792.md
    - 793. Preimage Size of Factorial Zeroes Function: lc/793.md
    - 794. Valid Tic-Tac-Toe State: lc/794.md
    - 795. Number of Subarrays with Bounded Maximum: lc/795.md
    - 796. Rotate String: lc/796.md
    - 797. All Paths From Source to Target: lc/797.md
    - 798. Smallest Rotation with Highest Score: lc/798.md
    - 799. Champagne Tower: lc/799.md
    - 800. Similar RGB Color: lc/800.md
    - 801. Minimum Swaps To Make Sequences Increasing: lc/801.md
    - 802. Find Eventual Safe States: lc/802.md
    - 803. Bricks Falling When Hit: lc/803.md
    - 804. Unique Morse Code Words: lc/804.md
    - 805. Split Array With Same Average: lc/805.md
    - 806. Number of Lines To Write String: lc/806.md
    - 807. Max Increase to Keep City Skyline: lc/807.md
    - 808. Soup Servings: lc/808.md
    - 809. Expressive Words: lc/809.md
    - 810. Chalkboard XOR Game: lc/810.md
    - 811. Subdomain Visit Count: lc/811.md
    - 812. Largest Triangle Area: lc/812.md
    - 813. Largest Sum of Averages: lc/813.md
    - 814. Binary Tree Pruning: lc/814.md
    - 815. Bus Routes: lc/815.md
    - 816. Ambiguous Coordinates: lc/816.md
    - 817. Linked List Components: lc/817.md
    - 818. Race Car: lc/818.md
    - 819. Most Common Word: lc/819.md
    - 820. Short Encoding of Words: lc/820.md
    - 821. Shortest Distance to a Character: lc/821.md
    - 822. Card Flipping Game: lc/822.md
    - 823. Binary Trees With Factors: lc/823.md
    - 824. Goat Latin: lc/824.md
    - 825. Friends Of Appropriate Ages: lc/825.md
    - 826. Most Profit Assigning Work: lc/826.md
    - 827. Making A Large Island: lc/827.md
    - 828. Count Unique Characters of All Substrings of a Given String: lc/828.md
    - 829. Consecutive Numbers Sum: lc/829.md
    - 830. Positions of Large Groups: lc/830.md
    - 831. Masking Personal Information: lc/831.md
    - 832. Flipping an Image: lc/832.md
    - 833. Find And Replace in String: lc/833.md
    - 834. Sum of Distances in Tree: lc/834.md
    - 835. Image Overlap: lc/835.md
    - 836. Rectangle Overlap: lc/836.md
    - 837. New 21 Game: lc/837.md
    - 838. Push Dominoes: lc/838.md
    - 839. Similar String Groups: lc/839.md
    - 840. Magic Squares In Grid: lc/840.md
    - 841. Keys and Rooms: lc/841.md
    - 842. Split Array into Fibonacci Sequence: lc/842.md
    - 843. Guess the Word: lc/843.md
    - 844. Backspace String Compare: lc/844.md
    - 845. Longest Mountain in Array: lc/845.md
    - 846. Hand of Straights: lc/846.md
    - 847. Shortest Path Visiting All Nodes: lc/847.md
    - 848. Shifting Letters: lc/848.md
    - 849. Maximize Distance to Closest Person: lc/849.md
    - 850. Rectangle Area II: lc/850.md
    - 851. Loud and Rich: lc/851.md
    - 852. Peak Index in a Mountain Array: lc/852.md
    - 853. Car Fleet: lc/853.md
    - 854. K-Similar Strings: lc/854.md
    - 855. Exam Room: lc/855.md
    - 856. Score of Parentheses: lc/856.md
    - 857. Minimum Cost to Hire K Workers: lc/857.md
    - 858. Mirror Reflection: lc/858.md
    - 859. Buddy Strings: lc/859.md
    - 860. Lemonade Change: lc/860.md
    - 861. Score After Flipping Matrix: lc/861.md
    - 862. Shortest Subarray with Sum at Least K: lc/862.md
    - 863. All Nodes Distance K in Binary Tree: lc/863.md
    - 864. Shortest Path to Get All Keys: lc/864.md
    - 865. Smallest Subtree with all the Deepest Nodes: lc/865.md
    - 866. Prime Palindrome: lc/866.md
    - 867. Transpose Matrix: lc/867.md
    - 868. Binary Gap: lc/868.md
    - 869. Reordered Power of 2: lc/869.md
    - 870. Advantage Shuffle: lc/870.md
    - 871. Minimum Number of Refueling Stops: lc/871.md
    - 872. Leaf-Similar Trees: lc/872.md
    - 873. Length of Longest Fibonacci Subsequence: lc/873.md
    - 874. Walking Robot Simulation: lc/874.md
    - 875. Koko Eating Bananas: lc/875.md
    - 876. Middle of the Linked List: lc/876.md
    - 877. Stone Game: lc/877.md
    - 878. Nth Magical Number: lc/878.md
    - 879. Profitable Schemes: lc/879.md
    - 880. Decoded String at Index: lc/880.md
    - 881. Boats to Save People: lc/881.md
    - 882. Reachable Nodes In Subdivided Graph: lc/882.md
    - 883. Projection Area of 3D Shapes: lc/883.md
    - 884. Uncommon Words from Two Sentences: lc/884.md
    - 885. Spiral Matrix III: lc/885.md
    - 886. Possible Bipartition: lc/886.md
    - 887. Super Egg Drop: lc/887.md
    - 888. Fair Candy Swap: lc/888.md
    - 889. Construct Binary Tree from Preorder and Postorder Traversal: lc/889.md
    - 890. Find and Replace Pattern: lc/890.md
    - 891. Sum of Subsequence Widths: lc/891.md
    - 892. Surface Area of 3D Shapes: lc/892.md
    - 893. Groups of Special-Equivalent Strings: lc/893.md
    - 894. All Possible Full Binary Trees: lc/894.md
    - 895. Maximum Frequency Stack: lc/895.md
    - 896. Monotonic Array: lc/896.md
    - 897. Increasing Order Search Tree: lc/897.md
    - 898. Bitwise ORs of Subarrays: lc/898.md
    - 899. Orderly Queue: lc/899.md
    - 900. RLE Iterator: lc/900.md
    - 901. Online Stock Span: lc/901.md
    - 902. Numbers At Most N Given Digit Set: lc/902.md
    - 903. Valid Permutations for DI Sequence: lc/903.md
    - 904. Fruit Into Baskets: lc/904.md
    - 905. Sort Array By Parity: lc/905.md
    - 906. Super Palindromes: lc/906.md
    - 907. Sum of Subarray Minimums: lc/907.md
    - 908. Smallest Range I: lc/908.md
    - 909. Snakes and Ladders: lc/909.md
    - 910. Smallest Range II: lc/910.md
    - 911. Online Election: lc/911.md
    - 912. Sort an Array: lc/912.md
    - 913. Cat and Mouse: lc/913.md
    - 914. X of a Kind in a Deck of Cards: lc/914.md
    - 915. Partition Array into Disjoint Intervals: lc/915.md
    - 916. Word Subsets: lc/916.md
    - 917. Reverse Only Letters: lc/917.md
    - 918. Maximum Sum Circular Subarray: lc/918.md
    - 919. Complete Binary Tree Inserter: lc/919.md
    - 920. Number of Music Playlists: lc/920.md
    - 921. Minimum Add to Make Parentheses Valid: lc/921.md
    - 922. Sort Array By Parity II: lc/922.md
    - 923. 3Sum With Multiplicity: lc/923.md
    - 924. Minimize Malware Spread: lc/924.md
    - 925. Long Pressed Name: lc/925.md
    - 926. Flip String to Monotone Increasing: lc/926.md
    - 927. Three Equal Parts: lc/927.md
    - 928. Minimize Malware Spread II: lc/928.md
    - 929. Unique Email Addresses: lc/929.md
    - 930. Binary Subarrays With Sum: lc/930.md
    - 931. Minimum Falling Path Sum: lc/931.md
    - 932. Beautiful Array: lc/932.md
    - 933. Number of Recent Calls: lc/933.md
    - 934. Shortest Bridge: lc/934.md
    - 935. Knight Dialer: lc/935.md
    - 936. Stamping The Sequence: lc/936.md
    - 937. Reorder Data in Log Files: lc/937.md
    - 938. Range Sum of BST: lc/938.md
    - 939. Minimum Area Rectangle: lc/939.md
    - 940. Distinct Subsequences II: lc/940.md
    - 941. Valid Mountain Array: lc/941.md
    - 942. DI String Match: lc/942.md
    - 943. Find the Shortest Superstring: lc/943.md
    - 944. Delete Columns to Make Sorted: lc/944.md
    - 945. Minimum Increment to Make Array Unique: lc/945.md
    - 946. Validate Stack Sequences: lc/946.md
    - 947. Most Stones Removed with Same Row or Column: lc/947.md
    - 948. Bag of Tokens: lc/948.md
    - 949. Largest Time for Given Digits: lc/949.md
    - 950. Reveal Cards In Increasing Order: lc/950.md
    - 951. Flip Equivalent Binary Trees: lc/951.md
    - 952. Largest Component Size by Common Factor: lc/952.md
    - 953. Verifying an Alien Dictionary: lc/953.md
    - 954. Array of Doubled Pairs: lc/954.md
    - 955. Delete Columns to Make Sorted II: lc/955.md
    - 956. Tallest Billboard: lc/956.md
    - 957. Prison Cells After N Days: lc/957.md
    - 958. Check Completeness of a Binary Tree: lc/958.md
    - 959. Regions Cut By Slashes: lc/959.md
    - 960. Delete Columns to Make Sorted III: lc/960.md
    - 961. N-Repeated Element in Size 2N Array: lc/961.md
    - 962. Maximum Width Ramp: lc/962.md
    - 963. Minimum Area Rectangle II: lc/963.md
    - 964. Least Operators to Express Number: lc/964.md
    - 965. Univalued Binary Tree: lc/965.md
    - 966. Vowel Spellchecker: lc/966.md
    - 967. Numbers With Same Consecutive Differences: lc/967.md
    - 968. Binary Tree Cameras: lc/968.md
    - 969. Pancake Sorting: lc/969.md
    - 970. Powerful Integers: lc/970.md
    - 971. Flip Binary Tree To Match Preorder Traversal: lc/971.md
    - 972. Equal Rational Numbers: lc/972.md
    - 973. K Closest Points to Origin: lc/973.md
    - 974. Subarray Sums Divisible by K: lc/974.md
    - 975. Odd Even Jump: lc/975.md
    - 976. Largest Perimeter Triangle: lc/976.md
    - 977. Squares of a Sorted Array: lc/977.md
    - 978. Longest Turbulent Subarray: lc/978.md
    - 979. Distribute Coins in Binary Tree: lc/979.md
    - 980. Unique Paths III: lc/980.md
    - 981. Time Based Key-Value Store: lc/981.md
    - 982. Triples with Bitwise AND Equal To Zero: lc/982.md
    - 983. Minimum Cost For Tickets: lc/983.md
    - 984. String Without AAA or BBB: lc/984.md
    - 985. Sum of Even Numbers After Queries: lc/985.md
    - 986. Interval List Intersections: lc/986.md
    - 987. Vertical Order Traversal of a Binary Tree: lc/987.md
    - 988. Smallest String Starting From Leaf: lc/988.md
    - 989. Add to Array-Form of Integer: lc/989.md
    - 990. Satisfiability of Equality Equations: lc/990.md
    - 991. Broken Calculator: lc/991.md
    - 992. Subarrays with K Different Integers: lc/992.md
    - 993. Cousins in Binary Tree: lc/993.md
    - 994. Rotting Oranges: lc/994.md
    - 995. Minimum Number of K Consecutive Bit Flips: lc/995.md
    - 996. Number of Squareful Arrays: lc/996.md
    - 997. Find the Town Judge: lc/997.md
    - 998. Maximum Binary Tree II: lc/998.md
    - 999. Available Captures for Rook: lc/999.md
    - 1000. Minimum Cost to Merge Stones: lc/1000.md
    - 1001. Grid Illumination: lc/1001.md
    - 1002. Find Common Characters: lc/1002.md
    - 1003. Check If Word Is Valid After Substitutions: lc/1003.md
    - 1004. Max Consecutive Ones III: lc/1004.md
    - 1005. Maximize Sum Of Array After K Negations: lc/1005.md
    - 1006. Clumsy Factorial: lc/1006.md
    - 1007. Minimum Domino Rotations For Equal Row: lc/1007.md
    - 1008. Construct Binary Search Tree from Preorder Traversal: lc/1008.md
    - 1009. Complement of Base 10 Integer: lc/1009.md
    - 1010. Pairs of Songs With Total Durations Divisible by 60: lc/1010.md
    - 1011. Capacity To Ship Packages Within D Days: lc/1011.md
    - 1012. Numbers With Repeated Digits: lc/1012.md
    - 1013. Partition Array Into Three Parts With Equal Sum: lc/1013.md
    - 1014. Best Sightseeing Pair: lc/1014.md
    - 1015. Smallest Integer Divisible by K: lc/1015.md
    - 1016. Binary String With Substrings Representing 1 To N: lc/1016.md
    - 1017. Convert to Base -2: lc/1017.md
    - 1018. Binary Prefix Divisible By 5: lc/1018.md
    - 1019. Next Greater Node In Linked List: lc/1019.md
    - 1020. Number of Enclaves: lc/1020.md
    - 1021. Remove Outermost Parentheses: lc/1021.md
    - 1022. Sum of Root To Leaf Binary Numbers: lc/1022.md
    - 1023. Camelcase Matching: lc/1023.md
    - 1024. Video Stitching: lc/1024.md
    - 1025. Divisor Game: lc/1025.md
    - 1026. Maximum Difference Between Node and Ancestor: lc/1026.md
    - 1027. Longest Arithmetic Subsequence: lc/1027.md
    - 1028. Recover a Tree From Preorder Traversal: lc/1028.md
    - 1029. Two City Scheduling: lc/1029.md
    - 1030. Matrix Cells in Distance Order: lc/1030.md
    - 1031. Maximum Sum of Two Non-Overlapping Subarrays: lc/1031.md
    - 1032. Stream of Characters: lc/1032.md
    - 1033. Moving Stones Until Consecutive: lc/1033.md
    - 1034. Coloring A Border: lc/1034.md
    - 1035. Uncrossed Lines: lc/1035.md
    - 1036. Escape a Large Maze: lc/1036.md
    - 1037. Valid Boomerang: lc/1037.md
    - 1038. Binary Search Tree to Greater Sum Tree: lc/1038.md
    - 1039. Minimum Score Triangulation of Polygon: lc/1039.md
    - 1040. Moving Stones Until Consecutive II: lc/1040.md
    - 1041. Robot Bounded In Circle: lc/1041.md
    - 1042. Flower Planting With No Adjacent: lc/1042.md
    - 1043. Partition Array for Maximum Sum: lc/1043.md
    - 1044. Longest Duplicate Substring: lc/1044.md
    - 1045. Customers Who Bought All Products: lc/1045.md
    - 1046. Last Stone Weight: lc/1046.md
    - 1047. Remove All Adjacent Duplicates In String: lc/1047.md
    - 1048. Longest String Chain: lc/1048.md
    - 1049. Last Stone Weight II: lc/1049.md
    - 1050. Actors and Directors Who Cooperated At Least Three Times: lc/1050.md
    - 1051. Height Checker: lc/1051.md
    - 1052. Grumpy Bookstore Owner: lc/1052.md
    - 1053. Previous Permutation With One Swap: lc/1053.md
    - 1054. Distant Barcodes: lc/1054.md
    - 1055. Shortest Way to Form String: lc/1055.md
    - 1056. Confusing Number: lc/1056.md
    - 1057. Campus Bikes: lc/1057.md
    - 1058. Minimize Rounding Error to Meet Target: lc/1058.md
    - 1059. All Paths from Source Lead to Destination: lc/1059.md
    - 1060. Missing Element in Sorted Array: lc/1060.md
    - 1061. Lexicographically Smallest Equivalent String: lc/1061.md
    - 1062. Longest Repeating Substring: lc/1062.md
    - 1063. Number of Valid Subarrays: lc/1063.md
    - 1064. Fixed Point: lc/1064.md
    - 1065. Index Pairs of a String: lc/1065.md
    - 1066. Campus Bikes II: lc/1066.md
    - 1067. Digit Count in Range: lc/1067.md
    - 1068. Product Sales Analysis I: lc/1068.md
    - 1069. Product Sales Analysis II: lc/1069.md
    - 1070. Product Sales Analysis III: lc/1070.md
    - 1071. Greatest Common Divisor of Strings: lc/1071.md
    - 1072. Flip Columns For Maximum Number of Equal Rows: lc/1072.md
    - 1073. Adding Two Negabinary Numbers: lc/1073.md
    - 1074. Number of Submatrices That Sum to Target: lc/1074.md
    - 1075. Project Employees I: lc/1075.md
    - 1076. Project Employees II: lc/1076.md
    - 1077. Project Employees III: lc/1077.md
    - 1078. Occurrences After Bigram: lc/1078.md
    - 1079. Letter Tile Possibilities: lc/1079.md
    - 1080. Insufficient Nodes in Root to Leaf Paths: lc/1080.md
    - 1081. Smallest Subsequence of Distinct Characters: lc/1081.md
    - 1082. Sales Analysis I: lc/1082.md
    - 1083. Sales Analysis II: lc/1083.md
    - 1084. Sales Analysis III: lc/1084.md
    - 1085. Sum of Digits in the Minimum Number: lc/1085.md
    - 1086. High Five: lc/1086.md
    - 1087. Brace Expansion: lc/1087.md
    - 1088. Confusing Number II: lc/1088.md
    - 1089. Duplicate Zeros: lc/1089.md
    - 1090. Largest Values From Labels: lc/1090.md
    - 1091. Shortest Path in Binary Matrix: lc/1091.md
    - 1092. Shortest Common Supersequence: lc/1092.md
    - 1093. Statistics from a Large Sample: lc/1093.md
    - 1094. Car Pooling: lc/1094.md
    - 1095. Find in Mountain Array: lc/1095.md
    - 1096. Brace Expansion II: lc/1096.md
    - 1097. Game Play Analysis V: lc/1097.md
    - 1098. Unpopular Books: lc/1098.md
    - 1099. Two Sum Less Than K: lc/1099.md
    - 1100. Find K-Length Substrings With No Repeated Characters: lc/1100.md
    - 1101. The Earliest Moment When Everyone Become Friends: lc/1101.md
    - 1102. Path With Maximum Minimum Value: lc/1102.md
    - 1103. Distribute Candies to People: lc/1103.md
    - 1104. Path In Zigzag Labelled Binary Tree: lc/1104.md
    - 1105. Filling Bookcase Shelves: lc/1105.md
    - 1106. Parsing A Boolean Expression: lc/1106.md
    - 1107. New Users Daily Count: lc/1107.md
    - 1108. Defanging an IP Address: lc/1108.md
    - 1109. Corporate Flight Bookings: lc/1109.md
    - 1110. Delete Nodes And Return Forest: lc/1110.md
    - 1111. Maximum Nesting Depth of Two Valid Parentheses Strings: lc/1111.md
    - 1112. Highest Grade For Each Student: lc/1112.md
    - 1113. Reported Posts: lc/1113.md
    - 1114. Print in Order: lc/1114.md
    - 1115. Print FooBar Alternately: lc/1115.md
    - 1116. Print Zero Even Odd: lc/1116.md
    - 1117. Building H2O: lc/1117.md
    - 1118. Number of Days in a Month: lc/1118.md
    - 1119. Remove Vowels from a String: lc/1119.md
    - 1120. Maximum Average Subtree: lc/1120.md
    - 1121. Divide Array Into Increasing Sequences: lc/1121.md
    - 1122. Relative Sort Array: lc/1122.md
    - 1123. Lowest Common Ancestor of Deepest Leaves: lc/1123.md
    - 1124. Longest Well-Performing Interval: lc/1124.md
    - 1125. Smallest Sufficient Team: lc/1125.md
    - 1126. Active Businesses: lc/1126.md
    - 1127. User Purchase Platform: lc/1127.md
    - 1128. Number of Equivalent Domino Pairs: lc/1128.md
    - 1129. Shortest Path with Alternating Colors: lc/1129.md
    - 1130. Minimum Cost Tree From Leaf Values: lc/1130.md
    - 1131. Maximum of Absolute Value Expression: lc/1131.md
    - 1132. Reported Posts II: lc/1132.md
    - 1133. Largest Unique Number: lc/1133.md
    - 1134. Armstrong Number: lc/1134.md
    - 1135. Connecting Cities With Minimum Cost: lc/1135.md
    - 1136. Parallel Courses: lc/1136.md
    - 1137. N-th Tribonacci Number: lc/1137.md
    - 1138. Alphabet Board Path: lc/1138.md
    - 1139. Largest 1-Bordered Square: lc/1139.md
    - 1140. Stone Game II: lc/1140.md
    - 1141. User Activity for the Past 30 Days I: lc/1141.md
    - 1142. User Activity for the Past 30 Days II: lc/1142.md
    - 1143. Longest Common Subsequence: lc/1143.md
    - 1144. Decrease Elements To Make Array Zigzag: lc/1144.md
    - 1145. Binary Tree Coloring Game: lc/1145.md
    - 1146. Snapshot Array: lc/1146.md
    - 1147. Longest Chunked Palindrome Decomposition: lc/1147.md
    - 1148. Article Views I: lc/1148.md
    - 1149. Article Views II: lc/1149.md
    - 1150. Check If a Number Is Majority Element in a Sorted Array: lc/1150.md
    - 1151. Minimum Swaps to Group All 1's Together: lc/1151.md
    - 1152. Analyze User Website Visit Pattern: lc/1152.md
    - 1153. String Transforms Into Another String: lc/1153.md
    - 1154. Day of the Year: lc/1154.md
    - 1155. Number of Dice Rolls With Target Sum: lc/1155.md
    - 1156. Swap For Longest Repeated Character Substring: lc/1156.md
    - 1157. Online Majority Element In Subarray: lc/1157.md
    - 1158. Market Analysis I: lc/1158.md
    - 1159. Market Analysis II: lc/1159.md
    - 1160. Find Words That Can Be Formed by Characters: lc/1160.md
    - 1161. Maximum Level Sum of a Binary Tree: lc/1161.md
    - 1162. As Far from Land as Possible: lc/1162.md
    - 1163. Last Substring in Lexicographical Order: lc/1163.md
    - 1164. Product Price at a Given Date: lc/1164.md
    - 1165. Single-Row Keyboard: lc/1165.md
    - 1166. Design File System: lc/1166.md
    - 1167. Minimum Cost to Connect Sticks: lc/1167.md
    - 1168. Optimize Water Distribution in a Village: lc/1168.md
    - 1169. Invalid Transactions: lc/1169.md
    - 1170. Compare Strings by Frequency of the Smallest Character: lc/1170.md
    - 1171. Remove Zero Sum Consecutive Nodes from Linked List: lc/1171.md
    - 1172. Dinner Plate Stacks: lc/1172.md
    - 1173. Immediate Food Delivery I: lc/1173.md
    - 1174. Immediate Food Delivery II: lc/1174.md
    - 1175. Prime Arrangements: lc/1175.md
    - 1176. Diet Plan Performance: lc/1176.md
    - 1177. Can Make Palindrome from Substring: lc/1177.md
    - 1178. Number of Valid Words for Each Puzzle: lc/1178.md
    - 1179. Reformat Department Table: lc/1179.md
    - 1180. Count Substrings with Only One Distinct Letter: lc/1180.md
    - 1181. Before and After Puzzle: lc/1181.md
    - 1182. Shortest Distance to Target Color: lc/1182.md
    - 1183. Maximum Number of Ones: lc/1183.md
    - 1184. Distance Between Bus Stops: lc/1184.md
    - 1185. Day of the Week: lc/1185.md
    - 1186. Maximum Subarray Sum with One Deletion: lc/1186.md
    - 1187. Make Array Strictly Increasing: lc/1187.md
    - 1188. Design Bounded Blocking Queue: lc/1188.md
    - 1189. Maximum Number of Balloons: lc/1189.md
    - 1190. Reverse Substrings Between Each Pair of Parentheses: lc/1190.md
    - 1191. K-Concatenation Maximum Sum: lc/1191.md
    - 1192. Critical Connections in a Network: lc/1192.md
    - 1193. Monthly Transactions I: lc/1193.md
    - 1194. Tournament Winners: lc/1194.md
    - 1195. Fizz Buzz Multithreaded: lc/1195.md
    - 1196. How Many Apples Can You Put into the Basket: lc/1196.md
    - 1197. Minimum Knight Moves: lc/1197.md
    - 1198. Find Smallest Common Element in All Rows: lc/1198.md
    - 1199. Minimum Time to Build Blocks: lc/1199.md
    - 1200. Minimum Absolute Difference: lc/1200.md
    - 1201. Ugly Number III: lc/1201.md
    - 1202. Smallest String With Swaps: lc/1202.md
    - 1203. Sort Items by Groups Respecting Dependencies: lc/1203.md
    - 1204. Last Person to Fit in the Bus: lc/1204.md
    - 1205. Monthly Transactions II: lc/1205.md
    - 1206. Design Skiplist: lc/1206.md
    - 1207. Unique Number of Occurrences: lc/1207.md
    - 1208. Get Equal Substrings Within Budget: lc/1208.md
    - 1209. Remove All Adjacent Duplicates in String II: lc/1209.md
    - 1210. Minimum Moves to Reach Target with Rotations: lc/1210.md
    - 1211. Queries Quality and Percentage: lc/1211.md
    - 1212. Team Scores in Football Tournament: lc/1212.md
    - 1213. Intersection of Three Sorted Arrays: lc/1213.md
    - 1214. Two Sum BSTs: lc/1214.md
    - 1215. Stepping Numbers: lc/1215.md
    - 1216. Valid Palindrome III: lc/1216.md
    - 1217. Minimum Cost to Move Chips to The Same Position: lc/1217.md
    - 1218. Longest Arithmetic Subsequence of Given Difference: lc/1218.md
    - 1219. Path with Maximum Gold: lc/1219.md
    - 1220. Count Vowels Permutation: lc/1220.md
    - 1221. Split a String in Balanced Strings: lc/1221.md
    - 1222. Queens That Can Attack the King: lc/1222.md
    - 1223. Dice Roll Simulation: lc/1223.md
    - 1224. Maximum Equal Frequency: lc/1224.md
    - 1225. Report Contiguous Dates: lc/1225.md
    - 1226. The Dining Philosophers: lc/1226.md
    - 1227. Airplane Seat Assignment Probability: lc/1227.md
    - 1228. Missing Number In Arithmetic Progression: lc/1228.md
    - 1229. Meeting Scheduler: lc/1229.md
    - 1230. Toss Strange Coins: lc/1230.md
    - 1231. Divide Chocolate: lc/1231.md
    - 1232. Check If It Is a Straight Line: lc/1232.md
    - 1233. Remove Sub-Folders from the Filesystem: lc/1233.md
    - 1234. Replace the Substring for Balanced String: lc/1234.md
    - 1235. Maximum Profit in Job Scheduling: lc/1235.md
    - 1236. Web Crawler: lc/1236.md
    - 1237. Find Positive Integer Solution for a Given Equation: lc/1237.md
    - 1238. Circular Permutation in Binary Representation: lc/1238.md
    - 1239. Maximum Length of a Concatenated String with Unique Characters: lc/1239.md
    - 1240. Tiling a Rectangle with the Fewest Squares: lc/1240.md
    - 1241. Number of Comments per Post: lc/1241.md
    - 1242. Web Crawler Multithreaded: lc/1242.md
    - 1243. Array Transformation: lc/1243.md
    - 1244. Design A Leaderboard: lc/1244.md
    - 1245. Tree Diameter: lc/1245.md
    - 1246. Palindrome Removal: lc/1246.md
    - 1247. Minimum Swaps to Make Strings Equal: lc/1247.md
    - 1248. Count Number of Nice Subarrays: lc/1248.md
    - 1249. Minimum Remove to Make Valid Parentheses: lc/1249.md
    - 1250. Check If It Is a Good Array: lc/1250.md
    - 1251. Average Selling Price: lc/1251.md
    - 1252. Cells with Odd Values in a Matrix: lc/1252.md
    - 1253. Reconstruct a 2-Row Binary Matrix: lc/1253.md
    - 1254. Number of Closed Islands: lc/1254.md
    - 1255. Maximum Score Words Formed by Letters: lc/1255.md
    - 1256. Encode Number: lc/1256.md
    - 1257. Smallest Common Region: lc/1257.md
    - 1258. Synonymous Sentences: lc/1258.md
    - 1259. Handshakes That Don't Cross: lc/1259.md
    - 1260. Shift 2D Grid: lc/1260.md
    - 1261. Find Elements in a Contaminated Binary Tree: lc/1261.md
    - 1262. Greatest Sum Divisible by Three: lc/1262.md
    - 1263. Minimum Moves to Move a Box to Their Target Location: lc/1263.md
    - 1264. Page Recommendations: lc/1264.md
    - 1265. Print Immutable Linked List in Reverse: lc/1265.md
    - 1266. Minimum Time Visiting All Points: lc/1266.md
    - 1267. Count Servers that Communicate: lc/1267.md
    - 1268. Search Suggestions System: lc/1268.md
    - 1269. Number of Ways to Stay in the Same Place After Some Steps: lc/1269.md
    - 1270. All People Report to the Given Manager: lc/1270.md
    - 1271. Hexspeak: lc/1271.md
    - 1272. Remove Interval: lc/1272.md
    - 1273. Delete Tree Nodes: lc/1273.md
    - 1274. Number of Ships in a Rectangle: lc/1274.md
    - 1275. Find Winner on a Tic Tac Toe Game: lc/1275.md
    - 1276. Number of Burgers with No Waste of Ingredients: lc/1276.md
    - 1277. Count Square Submatrices with All Ones: lc/1277.md
    - 1278. Palindrome Partitioning III: lc/1278.md
    - 1279. Traffic Light Controlled Intersection: lc/1279.md
    - 1280. Students and Examinations: lc/1280.md
    - 1281. Subtract the Product and Sum of Digits of an Integer: lc/1281.md
    - 1282. Group the People Given the Group Size They Belong To: lc/1282.md
    - 1283. Find the Smallest Divisor Given a Threshold: lc/1283.md
    - 1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix: lc/1284.md
    - 1285. Find the Start and End Number of Continuous Ranges: lc/1285.md
    - 1286. Iterator for Combination: lc/1286.md
    - 1287. Element Appearing More Than 25% In Sorted Array: lc/1287.md
    - 1288. Remove Covered Intervals: lc/1288.md
    - 1289. Minimum Falling Path Sum II: lc/1289.md
    - 1290. Convert Binary Number in a Linked List to Integer: lc/1290.md
    - 1291. Sequential Digits: lc/1291.md
    - 1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold: lc/1292.md
    - 1293. Shortest Path in a Grid with Obstacles Elimination: lc/1293.md
    - 1294. Weather Type in Each Country: lc/1294.md
    - 1295. Find Numbers with Even Number of Digits: lc/1295.md
    - 1296. Divide Array in Sets of K Consecutive Numbers: lc/1296.md
    - 1297. Maximum Number of Occurrences of a Substring: lc/1297.md
    - 1298. Maximum Candies You Can Get from Boxes: lc/1298.md
    - 1299. Replace Elements with Greatest Element on Right Side: lc/1299.md
    - 1300. Sum of Mutated Array Closest to Target: lc/1300.md
    - 1301. Number of Paths with Max Score: lc/1301.md
    - 1302. Deepest Leaves Sum: lc/1302.md
    - 1303. Find the Team Size: lc/1303.md
    - 1304. Find N Unique Integers Sum up to Zero: lc/1304.md
    - 1305. All Elements in Two Binary Search Trees: lc/1305.md
    - 1306. Jump Game III: lc/1306.md
    - 1307. Verbal Arithmetic Puzzle: lc/1307.md
    - 1308. Running Total for Different Genders: lc/1308.md
    - 1309. Decrypt String from Alphabet to Integer Mapping: lc/1309.md
    - 1310. XOR Queries of a Subarray: lc/1310.md
    - 1311. Get Watched Videos by Your Friends: lc/1311.md
    - 1312. Minimum Insertion Steps to Make a String Palindrome: lc/1312.md
    - 1313. Decompress Run-Length Encoded List: lc/1313.md
    - 1314. Matrix Block Sum: lc/1314.md
    - 1315. Sum of Nodes with Even-Valued Grandparent: lc/1315.md
    - 1316. Distinct Echo Substrings: lc/1316.md
    - 1317. Convert Integer to the Sum of Two No-Zero Integers: lc/1317.md
    - 1318. Minimum Flips to Make a OR b Equal to c: lc/1318.md
    - 1319. Number of Operations to Make Network Connected: lc/1319.md
    - 1320. Minimum Distance to Type a Word Using Two Fingers: lc/1320.md
    - 1321. Restaurant Growth: lc/1321.md
    - 1322. Ads Performance: lc/1322.md
    - 1323. Maximum 69 Number: lc/1323.md
    - 1324. Print Words Vertically: lc/1324.md
    - 1325. Delete Leaves With a Given Value: lc/1325.md
    - 1326. Minimum Number of Taps to Open to Water a Garden: lc/1326.md
    - 1327. List the Products Ordered in a Period: lc/1327.md
    - 1328. Break a Palindrome: lc/1328.md
    - 1329. Sort the Matrix Diagonally: lc/1329.md
    - 1330. Reverse Subarray To Maximize Array Value: lc/1330.md
    - 1331. Rank Transform of an Array: lc/1331.md
    - 1332. Remove Palindromic Subsequences: lc/1332.md
    - 1333. Filter Restaurants by Vegan-Friendly, Price and Distance: lc/1333.md
    - 1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance: lc/1334.md
    - 1335. Minimum Difficulty of a Job Schedule: lc/1335.md
    - 1336. Number of Transactions per Visit: lc/1336.md
    - 1337. The K Weakest Rows in a Matrix: lc/1337.md
    - 1338. Reduce Array Size to The Half: lc/1338.md
    - 1339. Maximum Product of Splitted Binary Tree: lc/1339.md
    - 1340. Jump Game V: lc/1340.md
    - 1341. Movie Rating: lc/1341.md
    - 1342. Number of Steps to Reduce a Number to Zero: lc/1342.md
    - 1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold: lc/1343.md
    - 1344. Angle Between Hands of a Clock: lc/1344.md
    - 1345. Jump Game IV: lc/1345.md
    - 1346. Check If N and Its Double Exist: lc/1346.md
    - 1347. Minimum Number of Steps to Make Two Strings Anagram: lc/1347.md
    - 1348. Tweet Counts Per Frequency: lc/1348.md
    - 1349. Maximum Students Taking Exam: lc/1349.md
    - 1350. Students With Invalid Departments: lc/1350.md
    - 1351. Count Negative Numbers in a Sorted Matrix: lc/1351.md
    - 1352. Product of the Last K Numbers: lc/1352.md
    - 1353. Maximum Number of Events That Can Be Attended: lc/1353.md
    - 1354. Construct Target Array With Multiple Sums: lc/1354.md
    - 1355. Activity Participants: lc/1355.md
    - 1356. Sort Integers by The Number of 1 Bits: lc/1356.md
    - 1357. Apply Discount Every n Orders: lc/1357.md
    - 1358. Number of Substrings Containing All Three Characters: lc/1358.md
    - 1359. Count All Valid Pickup and Delivery Options: lc/1359.md
    - 1360. Number of Days Between Two Dates: lc/1360.md
    - 1361. Validate Binary Tree Nodes: lc/1361.md
    - 1362. Closest Divisors: lc/1362.md
    - 1363. Largest Multiple of Three: lc/1363.md
    - 1364. Number of Trusted Contacts of a Customer: lc/1364.md
    - 1365. How Many Numbers Are Smaller Than the Current Number: lc/1365.md
    - 1366. Rank Teams by Votes: lc/1366.md
    - 1367. Linked List in Binary Tree: lc/1367.md
    - 1368. Minimum Cost to Make at Least One Valid Path in a Grid: lc/1368.md
    - 1369. Get the Second Most Recent Activity: lc/1369.md
    - 1370. Increasing Decreasing String: lc/1370.md
    - 1371. Find the Longest Substring Containing Vowels in Even Counts: lc/1371.md
    - 1372. Longest ZigZag Path in a Binary Tree: lc/1372.md
    - 1373. Maximum Sum BST in Binary Tree: lc/1373.md
    - 1374. Generate a String With Characters That Have Odd Counts: lc/1374.md
    - 1375. Number of Times Binary String Is Prefix-Aligned: lc/1375.md
    - 1376. Time Needed to Inform All Employees: lc/1376.md
    - 1377. Frog Position After T Seconds: lc/1377.md
    - 1378. Replace Employee ID With The Unique Identifier: lc/1378.md
    - 1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree: lc/1379.md
    - 1380. Lucky Numbers in a Matrix: lc/1380.md
    - 1381. Design a Stack With Increment Operation: lc/1381.md
    - 1382. Balance a Binary Search Tree: lc/1382.md
    - 1383. Maximum Performance of a Team: lc/1383.md
    - 1384. Total Sales Amount by Year: lc/1384.md
    - 1385. Find the Distance Value Between Two Arrays: lc/1385.md
    - 1386. Cinema Seat Allocation: lc/1386.md
    - 1387. Sort Integers by The Power Value: lc/1387.md
    - 1388. Pizza With 3n Slices: lc/1388.md
    - 1389. Create Target Array in the Given Order: lc/1389.md
    - 1390. Four Divisors: lc/1390.md
    - 1391. Check if There is a Valid Path in a Grid: lc/1391.md
    - 1392. Longest Happy Prefix: lc/1392.md
    - 1393. Capital GainLoss: lc/1393.md
    - 1394. Find Lucky Integer in an Array: lc/1394.md
    - 1395. Count Number of Teams: lc/1395.md
    - 1396. Design Underground System: lc/1396.md
    - 1397. Find All Good Strings: lc/1397.md
    - 1398. Customers Who Bought Products A and B but Not C: lc/1398.md
    - 1399. Count Largest Group: lc/1399.md
    - 1400. Construct K Palindrome Strings: lc/1400.md
    - 1401. Circle and Rectangle Overlapping: lc/1401.md
    - 1402. Reducing Dishes: lc/1402.md
    - 1403. Minimum Subsequence in Non-Increasing Order: lc/1403.md
    - 1404. Number of Steps to Reduce a Number in Binary Representation to One: lc/1404.md
    - 1405. Longest Happy String: lc/1405.md
    - 1406. Stone Game III: lc/1406.md
    - 1407. Top Travellers: lc/1407.md
    - 1408. String Matching in an Array: lc/1408.md
    - 1409. Queries on a Permutation With Key: lc/1409.md
    - 1410. HTML Entity Parser: lc/1410.md
    - 1411. Number of Ways to Paint N × 3 Grid: lc/1411.md
    - 1412. Find the Quiet Students in All Exams: lc/1412.md
    - 1413. Minimum Value to Get Positive Step by Step Sum: lc/1413.md
    - 1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K: lc/1414.md
    - 1415. The k-th Lexicographical String of All Happy Strings of Length n: lc/1415.md
    - 1416. Restore The Array: lc/1416.md
    - 1417. Reformat The String: lc/1417.md
    - 1418. Display Table of Food Orders in a Restaurant: lc/1418.md
    - 1419. Minimum Number of Frogs Croaking: lc/1419.md
    - 1420. Build Array Where You Can Find The Maximum Exactly K Comparisons: lc/1420.md
    - 1421. NPV Queries: lc/1421.md
    - 1422. Maximum Score After Splitting a String: lc/1422.md
    - 1423. Maximum Points You Can Obtain from Cards: lc/1423.md
    - 1424. Diagonal Traverse II: lc/1424.md
    - 1425. Constrained Subsequence Sum: lc/1425.md
    - 1426. Counting Elements: lc/1426.md
    - 1427. Perform String Shifts: lc/1427.md
    - 1428. Leftmost Column with at Least a One: lc/1428.md
    - 1429. First Unique Number: lc/1429.md
    - 1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree: lc/1430.md
    - 1431. Kids With the Greatest Number of Candies: lc/1431.md
    - 1432. Max Difference You Can Get From Changing an Integer: lc/1432.md
    - 1433. Check If a String Can Break Another String: lc/1433.md
    - 1434. Number of Ways to Wear Different Hats to Each Other: lc/1434.md
    - 1435. Create a Session Bar Chart: lc/1435.md
    - 1436. Destination City: lc/1436.md
    - 1437. Check If All 1's Are at Least Length K Places Away: lc/1437.md
    - 1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit: lc/1438.md
    - 1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows: lc/1439.md
    - 1440. Evaluate Boolean Expression: lc/1440.md
    - 1441. Build an Array With Stack Operations: lc/1441.md
    - 1442. Count Triplets That Can Form Two Arrays of Equal XOR: lc/1442.md
    - 1443. Minimum Time to Collect All Apples in a Tree: lc/1443.md
    - 1444. Number of Ways of Cutting a Pizza: lc/1444.md
    - 1445. Apples & Oranges: lc/1445.md
    - 1446. Consecutive Characters: lc/1446.md
    - 1447. Simplified Fractions: lc/1447.md
    - 1448. Count Good Nodes in Binary Tree: lc/1448.md
    - 1449. Form Largest Integer With Digits That Add up to Target: lc/1449.md
    - 1450. Number of Students Doing Homework at a Given Time: lc/1450.md
    - 1451. Rearrange Words in a Sentence: lc/1451.md
    - 1452. People Whose List of Favorite Companies Is Not a Subset of Another List: lc/1452.md
    - 1453. Maximum Number of Darts Inside of a Circular Dartboard: lc/1453.md
    - 1454. Active Users: lc/1454.md
    - 1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence: lc/1455.md
    - 1456. Maximum Number of Vowels in a Substring of Given Length: lc/1456.md
    - 1457. Pseudo-Palindromic Paths in a Binary Tree: lc/1457.md
    - 1458. Max Dot Product of Two Subsequences: lc/1458.md
    - 1459. Rectangles Area: lc/1459.md
    - 1460. Make Two Arrays Equal by Reversing Subarrays: lc/1460.md
    - 1461. Check If a String Contains All Binary Codes of Size K: lc/1461.md
    - 1462. Course Schedule IV: lc/1462.md
    - 1463. Cherry Pickup II: lc/1463.md
    - 1464. Maximum Product of Two Elements in an Array: lc/1464.md
    - 1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts: lc/1465.md
    - 1466. Reorder Routes to Make All Paths Lead to the City Zero: lc/1466.md
    - 1467. Probability of a Two Boxes Having The Same Number of Distinct Balls: lc/1467.md
    - 1468. Calculate Salaries: lc/1468.md
    - 1469. Find All The Lonely Nodes: lc/1469.md
    - 1470. Shuffle the Array: lc/1470.md
    - 1471. The k Strongest Values in an Array: lc/1471.md
    - 1472. Design Browser History: lc/1472.md
    - 1473. Paint House III: lc/1473.md
    - 1474. Delete N Nodes After M Nodes of a Linked List: lc/1474.md
    - 1475. Final Prices With a Special Discount in a Shop: lc/1475.md
    - 1476. Subrectangle Queries: lc/1476.md
    - 1477. Find Two Non-overlapping Sub-arrays Each With Target Sum: lc/1477.md
    - 1478. Allocate Mailboxes: lc/1478.md
    - 1479. Sales by Day of the Week: lc/1479.md
    - 1480. Running Sum of 1d Array: lc/1480.md
    - 1481. Least Number of Unique Integers after K Removals: lc/1481.md
    - 1482. Minimum Number of Days to Make m Bouquets: lc/1482.md
    - 1483. Kth Ancestor of a Tree Node: lc/1483.md
    - 1484. Group Sold Products By The Date: lc/1484.md
    - 1485. Clone Binary Tree With Random Pointer: lc/1485.md
    - 1486. XOR Operation in an Array: lc/1486.md
    - 1487. Making File Names Unique: lc/1487.md
    - 1488. Avoid Flood in The City: lc/1488.md
    - 1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree: lc/1489.md
    - 1490. Clone N-ary Tree: lc/1490.md
    - 1491. Average Salary Excluding the Minimum and Maximum Salary: lc/1491.md
    - 1492. The kth Factor of n: lc/1492.md
    - 1493. Longest Subarray of 1's After Deleting One Element: lc/1493.md
    - 1494. Parallel Courses II: lc/1494.md
    - 1495. Friendly Movies Streamed Last Month: lc/1495.md
    - 1496. Path Crossing: lc/1496.md
    - 1497. Check If Array Pairs Are Divisible by k: lc/1497.md
    - 1498. Number of Subsequences That Satisfy the Given Sum Condition: lc/1498.md
    - 1499. Max Value of Equation: lc/1499.md
    - 1500. Design a File Sharing System: lc/1500.md
    - 1501. Countries You Can Safely Invest In: lc/1501.md
    - 1502. Can Make Arithmetic Progression From Sequence: lc/1502.md
    - 1503. Last Moment Before All Ants Fall Out of a Plank: lc/1503.md
    - 1504. Count Submatrices With All Ones: lc/1504.md
    - 1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits: lc/1505.md
    - 1506. Find Root of N-Ary Tree: lc/1506.md
    - 1507. Reformat Date: lc/1507.md
    - 1508. Range Sum of Sorted Subarray Sums: lc/1508.md
    - 1509. Minimum Difference Between Largest and Smallest Value in Three Moves: lc/1509.md
    - 1510. Stone Game IV: lc/1510.md
    - 1511. Customer Order Frequency: lc/1511.md
    - 1512. Number of Good Pairs: lc/1512.md
    - 1513. Number of Substrings With Only 1s: lc/1513.md
    - 1514. Path with Maximum Probability: lc/1514.md
    - 1515. Best Position for a Service Centre: lc/1515.md
    - 1516. Move Sub-Tree of N-Ary Tree: lc/1516.md
    - 1517. Find Users With Valid E-Mails: lc/1517.md
    - 1518. Water Bottles: lc/1518.md
    - 1519. Number of Nodes in the Sub-Tree With the Same Label: lc/1519.md
    - 1520. Maximum Number of Non-Overlapping Substrings: lc/1520.md
    - 1521. Find a Value of a Mysterious Function Closest to Target: lc/1521.md
    - 1522. Diameter of N-Ary Tree: lc/1522.md
    - 1523. Count Odd Numbers in an Interval Range: lc/1523.md
    - 1524. Number of Sub-arrays With Odd Sum: lc/1524.md
    - 1525. Number of Good Ways to Split a String: lc/1525.md
    - 1526. Minimum Number of Increments on Subarrays to Form a Target Array: lc/1526.md
    - 1527. Patients With a Condition: lc/1527.md
    - 1528. Shuffle String: lc/1528.md
    - 1529. Minimum Suffix Flips: lc/1529.md
    - 1530. Number of Good Leaf Nodes Pairs: lc/1530.md
    - 1531. String Compression II: lc/1531.md
    - 1532. The Most Recent Three Orders: lc/1532.md
    - 1533. Find the Index of the Large Integer: lc/1533.md
    - 1534. Count Good Triplets: lc/1534.md
    - 1535. Find the Winner of an Array Game: lc/1535.md
    - 1536. Minimum Swaps to Arrange a Binary Grid: lc/1536.md
    - 1537. Get the Maximum Score: lc/1537.md
    - 1538. Guess the Majority in a Hidden Array: lc/1538.md
    - 1539. Kth Missing Positive Number: lc/1539.md
    - 1540. Can Convert String in K Moves: lc/1540.md
    - 1541. Minimum Insertions to Balance a Parentheses String: lc/1541.md
    - 1542. Find Longest Awesome Substring: lc/1542.md
    - 1543. Fix Product Name Format: lc/1543.md
    - 1544. Make The String Great: lc/1544.md
    - 1545. Find Kth Bit in Nth Binary String: lc/1545.md
    - 1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target: lc/1546.md
    - 1547. Minimum Cost to Cut a Stick: lc/1547.md
    - 1548. The Most Similar Path in a Graph: lc/1548.md
    - 1549. The Most Recent Orders for Each Product: lc/1549.md
    - 1550. Three Consecutive Odds: lc/1550.md
    - 1551. Minimum Operations to Make Array Equal: lc/1551.md
    - 1552. Magnetic Force Between Two Balls: lc/1552.md
    - 1553. Minimum Number of Days to Eat N Oranges: lc/1553.md
    - 1554. Strings Differ by One Character: lc/1554.md
    - 1555. Bank Account Summary: lc/1555.md
    - 1556. Thousand Separator: lc/1556.md
    - 1557. Minimum Number of Vertices to Reach All Nodes: lc/1557.md
    - 1558. Minimum Numbers of Function Calls to Make Target Array: lc/1558.md
    - 1559. Detect Cycles in 2D Grid: lc/1559.md
    - 1560. Most Visited Sector in a Circular Track: lc/1560.md
    - 1561. Maximum Number of Coins You Can Get: lc/1561.md
    - 1562. Find Latest Group of Size M: lc/1562.md
    - 1563. Stone Game V: lc/1563.md
    - 1564. Put Boxes Into the Warehouse I: lc/1564.md
    - 1565. Unique Orders and Customers Per Month: lc/1565.md
    - 1566. Detect Pattern of Length M Repeated K or More Times: lc/1566.md
    - 1567. Maximum Length of Subarray With Positive Product: lc/1567.md
    - 1568. Minimum Number of Days to Disconnect Island: lc/1568.md
    - 1569. Number of Ways to Reorder Array to Get Same BST: lc/1569.md
    - 1570. Dot Product of Two Sparse Vectors: lc/1570.md
    - 1571. Warehouse Manager: lc/1571.md
    - 1572. Matrix Diagonal Sum: lc/1572.md
    - 1573. Number of Ways to Split a String: lc/1573.md
    - 1574. Shortest Subarray to be Removed to Make Array Sorted: lc/1574.md
    - 1575. Count All Possible Routes: lc/1575.md
    - 1576. Replace All 's to Avoid Consecutive Repeating Characters: lc/1576.md
    - 1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers: lc/1577.md
    - 1578. Minimum Time to Make Rope Colorful: lc/1578.md
    - 1579. Remove Max Number of Edges to Keep Graph Fully Traversable: lc/1579.md
    - 1580. Put Boxes Into the Warehouse II: lc/1580.md
    - 1581. Customer Who Visited but Did Not Make Any Transactions: lc/1581.md
    - 1582. Special Positions in a Binary Matrix: lc/1582.md
    - 1583. Count Unhappy Friends: lc/1583.md
    - 1584. Min Cost to Connect All Points: lc/1584.md
    - 1585. Check If String Is Transformable With Substring Sort Operations: lc/1585.md
    - 1586. Binary Search Tree Iterator II: lc/1586.md
    - 1587. Bank Account Summary II: lc/1587.md
    - 1588. Sum of All Odd Length Subarrays: lc/1588.md
    - 1589. Maximum Sum Obtained of Any Permutation: lc/1589.md
    - 1590. Make Sum Divisible by P: lc/1590.md
    - 1591. Strange Printer II: lc/1591.md
    - 1592. Rearrange Spaces Between Words: lc/1592.md
    - 1593. Split a String Into the Max Number of Unique Substrings: lc/1593.md
    - 1594. Maximum Non Negative Product in a Matrix: lc/1594.md
    - 1595. Minimum Cost to Connect Two Groups of Points: lc/1595.md
    - 1596. The Most Frequently Ordered Products for Each Customer: lc/1596.md
    - 1597. Build Binary Expression Tree From Infix Expression: lc/1597.md
    - 1598. Crawler Log Folder: lc/1598.md
    - 1599. Maximum Profit of Operating a Centennial Wheel: lc/1599.md
    - 1600. Throne Inheritance: lc/1600.md
    - 1601. Maximum Number of Achievable Transfer Requests: lc/1601.md
    - 1602. Find Nearest Right Node in Binary Tree: lc/1602.md
    - 1603. Design Parking System: lc/1603.md
    - 1604. Alert Using Same Key-Card Three or More Times in a One Hour Period: lc/1604.md
    - 1605. Find Valid Matrix Given Row and Column Sums: lc/1605.md
    - 1606. Find Servers That Handled Most Number of Requests: lc/1606.md
    - 1607. Sellers With No Sales: lc/1607.md
    - 1608. Special Array With X Elements Greater Than or Equal X: lc/1608.md
    - 1609. Even Odd Tree: lc/1609.md
    - 1610. Maximum Number of Visible Points: lc/1610.md
    - 1611. Minimum One Bit Operations to Make Integers Zero: lc/1611.md
    - 1612. Check If Two Expression Trees are Equivalent: lc/1612.md
    - 1613. Find the Missing IDs: lc/1613.md
    - 1614. Maximum Nesting Depth of the Parentheses: lc/1614.md
    - 1615. Maximal Network Rank: lc/1615.md
    - 1616. Split Two Strings to Make Palindrome: lc/1616.md
    - 1617. Count Subtrees With Max Distance Between Cities: lc/1617.md
    - 1618. Maximum Font to Fit a Sentence in a Screen: lc/1618.md
    - 1619. Mean of Array After Removing Some Elements: lc/1619.md
    - 1620. Coordinate With Maximum Network Quality: lc/1620.md
    - 1621. Number of Sets of K Non-Overlapping Line Segments: lc/1621.md
    - 1622. Fancy Sequence: lc/1622.md
    - 1623. All Valid Triplets That Can Represent a Country: lc/1623.md
    - 1624. Largest Substring Between Two Equal Characters: lc/1624.md
    - 1625. Lexicographically Smallest String After Applying Operations: lc/1625.md
    - 1626. Best Team With No Conflicts: lc/1626.md
    - 1627. Graph Connectivity With Threshold: lc/1627.md
    - 1628. Design an Expression Tree With Evaluate Function: lc/1628.md
    - 1629. Slowest Key: lc/1629.md
    - 1630. Arithmetic Subarrays: lc/1630.md
    - 1631. Path With Minimum Effort: lc/1631.md
    - 1632. Rank Transform of a Matrix: lc/1632.md
    - 1633. Percentage of Users Attended a Contest: lc/1633.md
    - 1634. Add Two Polynomials Represented as Linked Lists: lc/1634.md
    - 1635. Hopper Company Queries I: lc/1635.md
    - 1636. Sort Array by Increasing Frequency: lc/1636.md
    - 1637. Widest Vertical Area Between Two Points Containing No Points: lc/1637.md
    - 1638. Count Substrings That Differ by One Character: lc/1638.md
    - 1639. Number of Ways to Form a Target String Given a Dictionary: lc/1639.md
    - 1640. Check Array Formation Through Concatenation: lc/1640.md
    - 1641. Count Sorted Vowel Strings: lc/1641.md
    - 1642. Furthest Building You Can Reach: lc/1642.md
    - 1643. Kth Smallest Instructions: lc/1643.md
    - 1644. Lowest Common Ancestor of a Binary Tree II: lc/1644.md
    - 1645. Hopper Company Queries II: lc/1645.md
    - 1646. Get Maximum in Generated Array: lc/1646.md
    - 1647. Minimum Deletions to Make Character Frequencies Unique: lc/1647.md
    - 1648. Sell Diminishing-Valued Colored Balls: lc/1648.md
    - 1649. Create Sorted Array through Instructions: lc/1649.md
    - 1650. Lowest Common Ancestor of a Binary Tree III: lc/1650.md
    - 1651. Hopper Company Queries III: lc/1651.md
    - 1652. Defuse the Bomb: lc/1652.md
    - 1653. Minimum Deletions to Make String Balanced: lc/1653.md
    - 1654. Minimum Jumps to Reach Home: lc/1654.md
    - 1655. Distribute Repeating Integers: lc/1655.md
    - 1656. Design an Ordered Stream: lc/1656.md
    - 1657. Determine if Two Strings Are Close: lc/1657.md
    - 1658. Minimum Operations to Reduce X to Zero: lc/1658.md
    - 1659. Maximize Grid Happiness: lc/1659.md
    - 1660. Correct a Binary Tree: lc/1660.md
    - 1661. Average Time of Process per Machine: lc/1661.md
    - 1662. Check If Two String Arrays are Equivalent: lc/1662.md
    - 1663. Smallest String With A Given Numeric Value: lc/1663.md
    - 1664. Ways to Make a Fair Array: lc/1664.md
    - 1665. Minimum Initial Energy to Finish Tasks: lc/1665.md
    - 1666. Change the Root of a Binary Tree: lc/1666.md
    - 1667. Fix Names in a Table: lc/1667.md
    - 1668. Maximum Repeating Substring: lc/1668.md
    - 1669. Merge In Between Linked Lists: lc/1669.md
    - 1670. Design Front Middle Back Queue: lc/1670.md
    - 1671. Minimum Number of Removals to Make Mountain Array: lc/1671.md
    - 1672. Richest Customer Wealth: lc/1672.md
    - 1673. Find the Most Competitive Subsequence: lc/1673.md
    - 1674. Minimum Moves to Make Array Complementary: lc/1674.md
    - 1675. Minimize Deviation in Array: lc/1675.md
    - 1676. Lowest Common Ancestor of a Binary Tree IV: lc/1676.md
    - 1677. Product's Worth Over Invoices: lc/1677.md
    - 1678. Goal Parser Interpretation: lc/1678.md
    - 1679. Max Number of K-Sum Pairs: lc/1679.md
    - 1680. Concatenation of Consecutive Binary Numbers: lc/1680.md
    - 1681. Minimum Incompatibility: lc/1681.md
    - 1682. Longest Palindromic Subsequence II: lc/1682.md
    - 1683. Invalid Tweets: lc/1683.md
    - 1684. Count the Number of Consistent Strings: lc/1684.md
    - 1685. Sum of Absolute Differences in a Sorted Array: lc/1685.md
    - 1686. Stone Game VI: lc/1686.md
    - 1687. Delivering Boxes from Storage to Ports: lc/1687.md
    - 1688. Count of Matches in Tournament: lc/1688.md
    - 1689. Partitioning Into Minimum Number Of Deci-Binary Numbers: lc/1689.md
    - 1690. Stone Game VII: lc/1690.md
    - 1691. Maximum Height by Stacking Cuboids: lc/1691.md
    - 1692. Count Ways to Distribute Candies: lc/1692.md
    - 1693. Daily Leads and Partners: lc/1693.md
    - 1694. Reformat Phone Number: lc/1694.md
    - 1695. Maximum Erasure Value: lc/1695.md
    - 1696. Jump Game VI: lc/1696.md
    - 1697. Checking Existence of Edge Length Limited Paths: lc/1697.md
    - 1698. Number of Distinct Substrings in a String: lc/1698.md
    - 1699. Number of Calls Between Two Persons: lc/1699.md
    - 1700. Number of Students Unable to Eat Lunch: lc/1700.md
    - 1701. Average Waiting Time: lc/1701.md
    - 1702. Maximum Binary String After Change: lc/1702.md
    - 1703. Minimum Adjacent Swaps for K Consecutive Ones: lc/1703.md
    - 1704. Determine if String Halves Are Alike: lc/1704.md
    - 1705. Maximum Number of Eaten Apples: lc/1705.md
    - 1706. Where Will the Ball Fall: lc/1706.md
    - 1707. Maximum XOR With an Element From Array: lc/1707.md
    - 1708. Largest Subarray Length K: lc/1708.md
    - 1709. Biggest Window Between Visits: lc/1709.md
    - 1710. Maximum Units on a Truck: lc/1710.md
    - 1711. Count Good Meals: lc/1711.md
    - 1712. Ways to Split Array Into Three Subarrays: lc/1712.md
    - 1713. Minimum Operations to Make a Subsequence: lc/1713.md
    - 1714. Sum Of Special Evenly-Spaced Elements In Array: lc/1714.md
    - 1715. Count Apples and Oranges: lc/1715.md
    - 1716. Calculate Money in Leetcode Bank: lc/1716.md
    - 1717. Maximum Score From Removing Substrings: lc/1717.md
    - 1718. Construct the Lexicographically Largest Valid Sequence: lc/1718.md
    - 1719. Number Of Ways To Reconstruct A Tree: lc/1719.md
    - 1720. Decode XORed Array: lc/1720.md
    - 1721. Swapping Nodes in a Linked List: lc/1721.md
    - 1722. Minimize Hamming Distance After Swap Operations: lc/1722.md
    - 1723. Find Minimum Time to Finish All Jobs: lc/1723.md
    - 1724. Checking Existence of Edge Length Limited Paths II: lc/1724.md
    - 1725. Number Of Rectangles That Can Form The Largest Square: lc/1725.md
    - 1726. Tuple with Same Product: lc/1726.md
    - 1727. Largest Submatrix With Rearrangements: lc/1727.md
    - 1728. Cat and Mouse II: lc/1728.md
    - 1729. Find Followers Count: lc/1729.md
    - 1730. Shortest Path to Get Food: lc/1730.md
    - 1731. The Number of Employees Which Report to Each Employee: lc/1731.md
    - 1732. Find the Highest Altitude: lc/1732.md
    - 1733. Minimum Number of People to Teach: lc/1733.md
    - 1734. Decode XORed Permutation: lc/1734.md
    - 1735. Count Ways to Make Array With Product: lc/1735.md
    - 1736. Latest Time by Replacing Hidden Digits: lc/1736.md
    - 1737. Change Minimum Characters to Satisfy One of Three Conditions: lc/1737.md
    - 1738. Find Kth Largest XOR Coordinate Value: lc/1738.md
    - 1739. Building Boxes: lc/1739.md
    - 1740. Find Distance in a Binary Tree: lc/1740.md
    - 1741. Find Total Time Spent by Each Employee: lc/1741.md
    - 1742. Maximum Number of Balls in a Box: lc/1742.md
    - 1743. Restore the Array From Adjacent Pairs: lc/1743.md
    - 1744. Can You Eat Your Favorite Candy on Your Favorite Day: lc/1744.md
    - 1745. Palindrome Partitioning IV: lc/1745.md
    - 1746. Maximum Subarray Sum After One Operation: lc/1746.md
    - 1747. Leetflex Banned Accounts: lc/1747.md
    - 1748. Sum of Unique Elements: lc/1748.md
    - 1749. Maximum Absolute Sum of Any Subarray: lc/1749.md
    - 1750. Minimum Length of String After Deleting Similar Ends: lc/1750.md
    - 1751. Maximum Number of Events That Can Be Attended II: lc/1751.md
    - 1752. Check if Array Is Sorted and Rotated: lc/1752.md
    - 1753. Maximum Score From Removing Stones: lc/1753.md
    - 1754. Largest Merge Of Two Strings: lc/1754.md
    - 1755. Closest Subsequence Sum: lc/1755.md
    - 1756. Design Most Recently Used Queue: lc/1756.md
    - 1757. Recyclable and Low Fat Products: lc/1757.md
    - 1758. Minimum Changes To Make Alternating Binary String: lc/1758.md
    - 1759. Count Number of Homogenous Substrings: lc/1759.md
    - 1760. Minimum Limit of Balls in a Bag: lc/1760.md
    - 1761. Minimum Degree of a Connected Trio in a Graph: lc/1761.md
    - 1762. Buildings With an Ocean View: lc/1762.md
    - 1763. Longest Nice Substring: lc/1763.md
    - 1764. Form Array by Concatenating Subarrays of Another Array: lc/1764.md
    - 1765. Map of Highest Peak: lc/1765.md
    - 1766. Tree of Coprimes: lc/1766.md
    - 1767. Find the Subtasks That Did Not Execute: lc/1767.md
    - 1768. Merge Strings Alternately: lc/1768.md
    - 1769. Minimum Number of Operations to Move All Balls to Each Box: lc/1769.md
    - 1770. Maximum Score from Performing Multiplication Operations: lc/1770.md
    - 1771. Maximize Palindrome Length From Subsequences: lc/1771.md
    - 1772. Sort Features by Popularity: lc/1772.md
    - 1773. Count Items Matching a Rule: lc/1773.md
    - 1774. Closest Dessert Cost: lc/1774.md
    - 1775. Equal Sum Arrays With Minimum Number of Operations: lc/1775.md
    - 1776. Car Fleet II: lc/1776.md
    - 1777. Product's Price for Each Store: lc/1777.md
    - 1778. Shortest Path in a Hidden Grid: lc/1778.md
    - 1779. Find Nearest Point That Has the Same X or Y Coordinate: lc/1779.md
    - 1780. Check if Number is a Sum of Powers of Three: lc/1780.md
    - 1781. Sum of Beauty of All Substrings: lc/1781.md
    - 1782. Count Pairs Of Nodes: lc/1782.md
    - 1783. Grand Slam Titles: lc/1783.md
    - 1784. Check if Binary String Has at Most One Segment of Ones: lc/1784.md
    - 1785. Minimum Elements to Add to Form a Given Sum: lc/1785.md
    - 1786. Number of Restricted Paths From First to Last Node: lc/1786.md
    - 1787. Make the XOR of All Segments Equal to Zero: lc/1787.md
    - 1788. Maximize the Beauty of the Garden: lc/1788.md
    - 1789. Primary Department for Each Employee: lc/1789.md
    - 1790. Check if One String Swap Can Make Strings Equal: lc/1790.md
    - 1791. Find Center of Star Graph: lc/1791.md
    - 1792. Maximum Average Pass Ratio: lc/1792.md
    - 1793. Maximum Score of a Good Subarray: lc/1793.md
    - 1794. Count Pairs of Equal Substrings With Minimum Difference: lc/1794.md
    - 1795. Rearrange Products Table: lc/1795.md
    - 1796. Second Largest Digit in a String: lc/1796.md
    - 1797. Design Authentication Manager: lc/1797.md
    - 1798. Maximum Number of Consecutive Values You Can Make: lc/1798.md
    - 1799. Maximize Score After N Operations: lc/1799.md
    - 1800. Maximum Ascending Subarray Sum: lc/1800.md
    - 1801. Number of Orders in the Backlog: lc/1801.md
    - 1802. Maximum Value at a Given Index in a Bounded Array: lc/1802.md
    - 1803. Count Pairs With XOR in a Range: lc/1803.md
    - 1804. Implement Trie II (Prefix Tree): lc/1804.md
    - 1805. Number of Different Integers in a String: lc/1805.md
    - 1806. Minimum Number of Operations to Reinitialize a Permutation: lc/1806.md
    - 1807. Evaluate the Bracket Pairs of a String: lc/1807.md
    - 1808. Maximize Number of Nice Divisors: lc/1808.md
    - 1809. Ad-Free Sessions: lc/1809.md
    - 1810. Minimum Path Cost in a Hidden Grid: lc/1810.md
    - 1811. Find Interview Candidates: lc/1811.md
    - 1812. Determine Color of a Chessboard Square: lc/1812.md
    - 1813. Sentence Similarity III: lc/1813.md
    - 1814. Count Nice Pairs in an Array: lc/1814.md
    - 1815. Maximum Number of Groups Getting Fresh Donuts: lc/1815.md
    - 1816. Truncate Sentence: lc/1816.md
    - 1817. Finding the Users Active Minutes: lc/1817.md
    - 1818. Minimum Absolute Sum Difference: lc/1818.md
    - 1819. Number of Different Subsequences GCDs: lc/1819.md
    - 1820. Maximum Number of Accepted Invitations: lc/1820.md
    - 1821. Find Customers With Positive Revenue this Year: lc/1821.md
    - 1822. Sign of the Product of an Array: lc/1822.md
    - 1823. Find the Winner of the Circular Game: lc/1823.md
    - 1824. Minimum Sideway Jumps: lc/1824.md
    - 1825. Finding MK Average: lc/1825.md
    - 1826. Faulty Sensor: lc/1826.md
    - 1827. Minimum Operations to Make the Array Increasing: lc/1827.md
    - 1828. Queries on Number of Points Inside a Circle: lc/1828.md
    - 1829. Maximum XOR for Each Query: lc/1829.md
    - 1830. Minimum Number of Operations to Make String Sorted: lc/1830.md
    - 1831. Maximum Transaction Each Day: lc/1831.md
    - 1832. Check if the Sentence Is Pangram: lc/1832.md
    - 1833. Maximum Ice Cream Bars: lc/1833.md
    - 1834. Single-Threaded CPU: lc/1834.md
    - 1835. Find XOR Sum of All Pairs Bitwise AND: lc/1835.md
    - 1836. Remove Duplicates From an Unsorted Linked List: lc/1836.md
    - 1837. Sum of Digits in Base K: lc/1837.md
    - 1838. Frequency of the Most Frequent Element: lc/1838.md
    - 1839. Longest Substring Of All Vowels in Order: lc/1839.md
    - 1840. Maximum Building Height: lc/1840.md
    - 1841. League Statistics: lc/1841.md
    - 1842. Next Palindrome Using Same Digits: lc/1842.md
    - 1843. Suspicious Bank Accounts: lc/1843.md
    - 1844. Replace All Digits with Characters: lc/1844.md
    - 1845. Seat Reservation Manager: lc/1845.md
    - 1846. Maximum Element After Decreasing and Rearranging: lc/1846.md
    - 1847. Closest Room: lc/1847.md
    - 1848. Minimum Distance to the Target Element: lc/1848.md
    - 1849. Splitting a String Into Descending Consecutive Values: lc/1849.md
    - 1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number: lc/1850.md
    - 1851. Minimum Interval to Include Each Query: lc/1851.md
    - 1852. Distinct Numbers in Each Subarray: lc/1852.md
    - 1853. Convert Date Format: lc/1853.md
    - 1854. Maximum Population Year: lc/1854.md
    - 1855. Maximum Distance Between a Pair of Values: lc/1855.md
    - 1856. Maximum Subarray Min-Product: lc/1856.md
    - 1857. Largest Color Value in a Directed Graph: lc/1857.md
    - 1858. Longest Word With All Prefixes: lc/1858.md
    - 1859. Sorting the Sentence: lc/1859.md
    - 1860. Incremental Memory Leak: lc/1860.md
    - 1861. Rotating the Box: lc/1861.md
    - 1862. Sum of Floored Pairs: lc/1862.md
    - 1863. Sum of All Subset XOR Totals: lc/1863.md
    - 1864. Minimum Number of Swaps to Make the Binary String Alternating: lc/1864.md
    - 1865. Finding Pairs With a Certain Sum: lc/1865.md
    - 1866. Number of Ways to Rearrange Sticks With K Sticks Visible: lc/1866.md
    - 1867. Orders With Maximum Quantity Above Average: lc/1867.md
    - 1868. Product of Two Run-Length Encoded Arrays: lc/1868.md
    - 1869. Longer Contiguous Segments of Ones than Zeros: lc/1869.md
    - 1870. Minimum Speed to Arrive on Time: lc/1870.md
    - 1871. Jump Game VII: lc/1871.md
    - 1872. Stone Game VIII: lc/1872.md
    - 1873. Calculate Special Bonus: lc/1873.md
    - 1874. Minimize Product Sum of Two Arrays: lc/1874.md
    - 1875. Group Employees of the Same Salary: lc/1875.md
    - 1876. Substrings of Size Three with Distinct Characters: lc/1876.md
    - 1877. Minimize Maximum Pair Sum in Array: lc/1877.md
    - 1878. Get Biggest Three Rhombus Sums in a Grid: lc/1878.md
    - 1879. Minimum XOR Sum of Two Arrays: lc/1879.md
    - 1880. Check if Word Equals Summation of Two Words: lc/1880.md
    - 1881. Maximum Value after Insertion: lc/1881.md
    - 1882. Process Tasks Using Servers: lc/1882.md
    - 1883. Minimum Skips to Arrive at Meeting On Time: lc/1883.md
    - 1884. Egg Drop With 2 Eggs and N Floors: lc/1884.md
    - 1885. Count Pairs in Two Arrays: lc/1885.md
    - 1886. Determine Whether Matrix Can Be Obtained By Rotation: lc/1886.md
    - 1887. Reduction Operations to Make the Array Elements Equal: lc/1887.md
    - 1888. Minimum Number of Flips to Make the Binary String Alternating: lc/1888.md
    - 1889. Minimum Space Wasted From Packaging: lc/1889.md
    - 1890. The Latest Login in 2020: lc/1890.md
    - 1891. Cutting Ribbons: lc/1891.md
    - 1892. Page Recommendations II: lc/1892.md
    - 1893. Check if All the Integers in a Range Are Covered: lc/1893.md
    - 1894. Find the Student that Will Replace the Chalk: lc/1894.md
    - 1895. Largest Magic Square: lc/1895.md
    - 1896. Minimum Cost to Change the Final Value of Expression: lc/1896.md
    - 1897. Redistribute Characters to Make All Strings Equal: lc/1897.md
    - 1898. Maximum Number of Removable Characters: lc/1898.md
    - 1899. Merge Triplets to Form Target Triplet: lc/1899.md
    - 1900. The Earliest and Latest Rounds Where Players Compete: lc/1900.md
    - 1901. Find a Peak Element II: lc/1901.md
    - 1902. Depth of BST Given Insertion Order: lc/1902.md
    - 1903. Largest Odd Number in String: lc/1903.md
    - 1904. The Number of Full Rounds You Have Played: lc/1904.md
    - 1905. Count Sub Islands: lc/1905.md
    - 1906. Minimum Absolute Difference Queries: lc/1906.md
    - 1907. Count Salary Categories: lc/1907.md
    - 1908. Game of Nim: lc/1908.md
    - 1909. Remove One Element to Make the Array Strictly Increasing: lc/1909.md
    - 1910. Remove All Occurrences of a Substring: lc/1910.md
    - 1911. Maximum Alternating Subsequence Sum: lc/1911.md
    - 1912. Design Movie Rental System: lc/1912.md
    - 1913. Maximum Product Difference Between Two Pairs: lc/1913.md
    - 1914. Cyclically Rotating a Grid: lc/1914.md
    - 1915. Number of Wonderful Substrings: lc/1915.md
    - 1916. Count Ways to Build Rooms in an Ant Colony: lc/1916.md
    - 1917. Leetcodify Friends Recommendations: lc/1917.md
    - 1918. Kth Smallest Subarray Sum: lc/1918.md
    - 1919. Leetcodify Similar Friends: lc/1919.md
    - 1920. Build Array from Permutation: lc/1920.md
    - 1921. Eliminate Maximum Number of Monsters: lc/1921.md
    - 1922. Count Good Numbers: lc/1922.md
    - 1923. Longest Common Subpath: lc/1923.md
    - 1924. Erect the Fence II: lc/1924.md
    - 1925. Count Square Sum Triples: lc/1925.md
    - 1926. Nearest Exit from Entrance in Maze: lc/1926.md
    - 1927. Sum Game: lc/1927.md
    - 1928. Minimum Cost to Reach Destination in Time: lc/1928.md
    - 1929. Concatenation of Array: lc/1929.md
    - 1930. Unique Length-3 Palindromic Subsequences: lc/1930.md
    - 1931. Painting a Grid With Three Different Colors: lc/1931.md
    - 1932. Merge BSTs to Create Single BST: lc/1932.md
    - 1933. Check if String Is Decomposable Into Value-Equal Substrings: lc/1933.md
    - 1934. Confirmation Rate: lc/1934.md
    - 1935. Maximum Number of Words You Can Type: lc/1935.md
    - 1936. Add Minimum Number of Rungs: lc/1936.md
    - 1937. Maximum Number of Points with Cost: lc/1937.md
    - 1938. Maximum Genetic Difference Query: lc/1938.md
    - 1939. Users That Actively Request Confirmation Messages: lc/1939.md
    - 1940. Longest Common Subsequence Between Sorted Arrays: lc/1940.md
    - 1941. Check if All Characters Have Equal Number of Occurrences: lc/1941.md
    - 1942. The Number of the Smallest Unoccupied Chair: lc/1942.md
    - 1943. Describe the Painting: lc/1943.md
    - 1944. Number of Visible People in a Queue: lc/1944.md
    - 1945. Sum of Digits of String After Convert: lc/1945.md
    - 1946. Largest Number After Mutating Substring: lc/1946.md
    - 1947. Maximum Compatibility Score Sum: lc/1947.md
    - 1948. Delete Duplicate Folders in System: lc/1948.md
    - 1949. Strong Friendship: lc/1949.md
    - 1950. Maximum of Minimum Values in All Subarrays: lc/1950.md
    - 1951. All the Pairs With the Maximum Number of Common Followers: lc/1951.md
    - 1952. Three Divisors: lc/1952.md
    - 1953. Maximum Number of Weeks for Which You Can Work: lc/1953.md
    - 1954. Minimum Garden Perimeter to Collect Enough Apples: lc/1954.md
    - 1955. Count Number of Special Subsequences: lc/1955.md
    - 1956. Minimum Time For K Virus Variants to Spread: lc/1956.md
    - 1957. Delete Characters to Make Fancy String: lc/1957.md
    - 1958. Check if Move is Legal: lc/1958.md
    - 1959. Minimum Total Space Wasted With K Resizing Operations: lc/1959.md
    - 1960. Maximum Product of the Length of Two Palindromic Substrings: lc/1960.md
    - 1961. Check If String Is a Prefix of Array: lc/1961.md
    - 1962. Remove Stones to Minimize the Total: lc/1962.md
    - 1963. Minimum Number of Swaps to Make the String Balanced: lc/1963.md
    - 1964. Find the Longest Valid Obstacle Course at Each Position: lc/1964.md
    - 1965. Employees With Missing Information: lc/1965.md
    - 1966. Binary Searchable Numbers in an Unsorted Array: lc/1966.md
    - 1967. Number of Strings That Appear as Substrings in Word: lc/1967.md
    - 1968. Array With Elements Not Equal to Average of Neighbors: lc/1968.md
    - 1969. Minimum Non-Zero Product of the Array Elements: lc/1969.md
    - 1970. Last Day Where You Can Still Cross: lc/1970.md
    - 1971. Find if Path Exists in Graph: lc/1971.md
    - 1972. First and Last Call On the Same Day: lc/1972.md
    - 1973. Count Nodes Equal to Sum of Descendants: lc/1973.md
    - 1974. Minimum Time to Type Word Using Special Typewriter: lc/1974.md
    - 1975. Maximum Matrix Sum: lc/1975.md
    - 1976. Number of Ways to Arrive at Destination: lc/1976.md
    - 1977. Number of Ways to Separate Numbers: lc/1977.md
    - 1978. Employees Whose Manager Left the Company: lc/1978.md
    - 1979. Find Greatest Common Divisor of Array: lc/1979.md
    - 1980. Find Unique Binary String: lc/1980.md
    - 1981. Minimize the Difference Between Target and Chosen Elements: lc/1981.md
    - 1982. Find Array Given Subset Sums: lc/1982.md
    - 1983. Widest Pair of Indices With Equal Range Sum: lc/1983.md
    - 1984. Minimum Difference Between Highest and Lowest of K Scores: lc/1984.md
    - 1985. Find the Kth Largest Integer in the Array: lc/1985.md
    - 1986. Minimum Number of Work Sessions to Finish the Tasks: lc/1986.md
    - 1987. Number of Unique Good Subsequences: lc/1987.md
    - 1988. Find Cutoff Score for Each School: lc/1988.md
    - 1989. Maximum Number of People That Can Be Caught in Tag: lc/1989.md
    - 1990. Count the Number of Experiments: lc/1990.md
    - 1991. Find the Middle Index in Array: lc/1991.md
    - 1992. Find All Groups of Farmland: lc/1992.md
    - 1993. Operations on Tree: lc/1993.md
    - 1994. The Number of Good Subsets: lc/1994.md
    - 1995. Count Special Quadruplets: lc/1995.md
    - 1996. The Number of Weak Characters in the Game: lc/1996.md
    - 1997. First Day Where You Have Been in All the Rooms: lc/1997.md
    - 1998. GCD Sort of an Array: lc/1998.md
    - 1999. Smallest Greater Multiple Made of Two Digits: lc/1999.md
    - 2000. Reverse Prefix of Word: lc/2000.md
    - 2001. Number of Pairs of Interchangeable Rectangles: lc/2001.md
    - 2002. Maximum Product of the Length of Two Palindromic Subsequences: lc/2002.md
    - 2003. Smallest Missing Genetic Value in Each Subtree: lc/2003.md
    - 2004. The Number of Seniors and Juniors to Join the Company: lc/2004.md
    - 2005. Subtree Removal Game with Fibonacci Tree: lc/2005.md
    - 2006. Count Number of Pairs With Absolute Difference K: lc/2006.md
    - 2007. Find Original Array From Doubled Array: lc/2007.md
    - 2008. Maximum Earnings From Taxi: lc/2008.md
    - 2009. Minimum Number of Operations to Make Array Continuous: lc/2009.md
    - 2010. The Number of Seniors and Juniors to Join the Company II: lc/2010.md
    - 2011. Final Value of Variable After Performing Operations: lc/2011.md
    - 2012. Sum of Beauty in the Array: lc/2012.md
    - 2013. Detect Squares: lc/2013.md
    - 2014. Longest Subsequence Repeated k Times: lc/2014.md
    - 2015. Average Height of Buildings in Each Segment: lc/2015.md
    - 2016. Maximum Difference Between Increasing Elements: lc/2016.md
    - 2017. Grid Game: lc/2017.md
    - 2018. Check if Word Can Be Placed In Crossword: lc/2018.md
    - 2019. The Score of Students Solving Math Expression: lc/2019.md
    - 2020. Number of Accounts That Did Not Stream: lc/2020.md
    - 2021. Brightest Position on Street: lc/2021.md
    - 2022. Convert 1D Array Into 2D Array: lc/2022.md
    - 2023. Number of Pairs of Strings With Concatenation Equal to Target: lc/2023.md
    - 2024. Maximize the Confusion of an Exam: lc/2024.md
    - 2025. Maximum Number of Ways to Partition an Array: lc/2025.md
    - 2026. Low-Quality Problems: lc/2026.md
    - 2027. Minimum Moves to Convert String: lc/2027.md
    - 2028. Find Missing Observations: lc/2028.md
    - 2029. Stone Game IX: lc/2029.md
    - 2030. Smallest K-Length Subsequence With Occurrences of a Letter: lc/2030.md
    - 2031. Count Subarrays With More Ones Than Zeros: lc/2031.md
    - 2032. Two Out of Three: lc/2032.md
    - 2033. Minimum Operations to Make a Uni-Value Grid: lc/2033.md
    - 2034. Stock Price Fluctuation: lc/2034.md
    - 2035. Partition Array Into Two Arrays to Minimize Sum Difference: lc/2035.md
    - 2036. Maximum Alternating Subarray Sum: lc/2036.md
    - 2037. Minimum Number of Moves to Seat Everyone: lc/2037.md
    - 2038. Remove Colored Pieces if Both Neighbors are the Same Color: lc/2038.md
    - 2039. The Time When the Network Becomes Idle: lc/2039.md
    - 2040. Kth Smallest Product of Two Sorted Arrays: lc/2040.md
    - 2041. Accepted Candidates From the Interviews: lc/2041.md
    - 2042. Check if Numbers Are Ascending in a Sentence: lc/2042.md
    - 2043. Simple Bank System: lc/2043.md
    - 2044. Count Number of Maximum Bitwise-OR Subsets: lc/2044.md
    - 2045. Second Minimum Time to Reach Destination: lc/2045.md
    - 2046. Sort Linked List Already Sorted Using Absolute Values: lc/2046.md
    - 2047. Number of Valid Words in a Sentence: lc/2047.md
    - 2048. Next Greater Numerically Balanced Number: lc/2048.md
    - 2049. Count Nodes With the Highest Score: lc/2049.md
    - 2050. Parallel Courses III: lc/2050.md
    - 2051. The Category of Each Member in the Store: lc/2051.md
    - 2052. Minimum Cost to Separate Sentence Into Rows: lc/2052.md
    - 2053. Kth Distinct String in an Array: lc/2053.md
    - 2054. Two Best Non-Overlapping Events: lc/2054.md
    - 2055. Plates Between Candles: lc/2055.md
    - 2056. Number of Valid Move Combinations On Chessboard: lc/2056.md
    - 2057. Smallest Index With Equal Value: lc/2057.md
    - 2058. Find the Minimum and Maximum Number of Nodes Between Critical Points: lc/2058.md
    - 2059. Minimum Operations to Convert Number: lc/2059.md
    - 2060. Check if an Original String Exists Given Two Encoded Strings: lc/2060.md
    - 2061. Number of Spaces Cleaning Robot Cleaned: lc/2061.md
    - 2062. Count Vowel Substrings of a String: lc/2062.md
    - 2063. Vowels of All Substrings: lc/2063.md
    - 2064. Minimized Maximum of Products Distributed to Any Store: lc/2064.md
    - 2065. Maximum Path Quality of a Graph: lc/2065.md
    - 2066. Account Balance: lc/2066.md
    - 2067. Number of Equal Count Substrings: lc/2067.md
    - 2068. Check Whether Two Strings are Almost Equivalent: lc/2068.md
    - 2069. Walking Robot Simulation II: lc/2069.md
    - 2070. Most Beautiful Item for Each Query: lc/2070.md
    - 2071. Maximum Number of Tasks You Can Assign: lc/2071.md
    - 2072. The Winner University: lc/2072.md
    - 2073. Time Needed to Buy Tickets: lc/2073.md
    - 2074. Reverse Nodes in Even Length Groups: lc/2074.md
    - 2075. Decode the Slanted Ciphertext: lc/2075.md
    - 2076. Process Restricted Friend Requests: lc/2076.md
    - 2077. Paths in Maze That Lead to Same Room: lc/2077.md
    - 2078. Two Furthest Houses With Different Colors: lc/2078.md
    - 2079. Watering Plants: lc/2079.md
    - 2080. Range Frequency Queries: lc/2080.md
    - 2081. Sum of k-Mirror Numbers: lc/2081.md
    - 2082. The Number of Rich Customers: lc/2082.md
    - 2083. Substrings That Begin and End With the Same Letter: lc/2083.md
    - 2084. Drop Type 1 Orders for Customers With Type 0 Orders: lc/2084.md
    - 2085. Count Common Words With One Occurrence: lc/2085.md
    - 2086. Minimum Number of Food Buckets to Feed the Hamsters: lc/2086.md
    - 2087. Minimum Cost Homecoming of a Robot in a Grid: lc/2087.md
    - 2088. Count Fertile Pyramids in a Land: lc/2088.md
    - 2089. Find Target Indices After Sorting Array: lc/2089.md
    - 2090. K Radius Subarray Averages: lc/2090.md
    - 2091. Removing Minimum and Maximum From Array: lc/2091.md
    - 2092. Find All People With Secret: lc/2092.md
    - 2093. Minimum Cost to Reach City With Discounts: lc/2093.md
    - 2094. Finding 3-Digit Even Numbers: lc/2094.md
    - 2095. Delete the Middle Node of a Linked List: lc/2095.md
    - 2096. Step-By-Step Directions From a Binary Tree Node to Another: lc/2096.md
    - 2097. Valid Arrangement of Pairs: lc/2097.md
    - 2098. Subsequence of Size K With the Largest Even Sum: lc/2098.md
    - 2099. Find Subsequence of Length K With the Largest Sum: lc/2099.md
    - 2100. Find Good Days to Rob the Bank: lc/2100.md
    - 2101. Detonate the Maximum Bombs: lc/2101.md
    - 2102. Sequentially Ordinal Rank Tracker: lc/2102.md
    - 2103. Rings and Rods: lc/2103.md
    - 2104. Sum of Subarray Ranges: lc/2104.md
    - 2105. Watering Plants II: lc/2105.md
    - 2106. Maximum Fruits Harvested After at Most K Steps: lc/2106.md
    - 2107. Number of Unique Flavors After Sharing K Candies: lc/2107.md
    - 2108. Find First Palindromic String in the Array: lc/2108.md
    - 2109. Adding Spaces to a String: lc/2109.md
    - 2110. Number of Smooth Descent Periods of a Stock: lc/2110.md
    - 2111. Minimum Operations to Make the Array K-Increasing: lc/2111.md
    - 2112. The Airport With the Most Traffic: lc/2112.md
    - 2113. Elements in Array After Removing and Replacing Elements: lc/2113.md
    - 2114. Maximum Number of Words Found in Sentences: lc/2114.md
    - 2115. Find All Possible Recipes from Given Supplies: lc/2115.md
    - 2116. Check if a Parentheses String Can Be Valid: lc/2116.md
    - 2117. Abbreviating the Product of a Range: lc/2117.md
    - 2118. Build the Equation: lc/2118.md
    - 2119. A Number After a Double Reversal: lc/2119.md
    - 2120. Execution of All Suffix Instructions Staying in a Grid: lc/2120.md
    - 2121. Intervals Between Identical Elements: lc/2121.md
    - 2122. Recover the Original Array: lc/2122.md
    - 2123. Minimum Operations to Remove Adjacent Ones in Matrix: lc/2123.md
    - 2124. Check if All A's Appears Before All B's: lc/2124.md
    - 2125. Number of Laser Beams in a Bank: lc/2125.md
    - 2126. Destroying Asteroids: lc/2126.md
    - 2127. Maximum Employees to Be Invited to a Meeting: lc/2127.md
    - 2128. Remove All Ones With Row and Column Flips: lc/2128.md
    - 2129. Capitalize the Title: lc/2129.md
    - 2130. Maximum Twin Sum of a Linked List: lc/2130.md
    - 2131. Longest Palindrome by Concatenating Two Letter Words: lc/2131.md
    - 2132. Stamping the Grid: lc/2132.md
    - 2133. Check if Every Row and Column Contains All Numbers: lc/2133.md
    - 2134. Minimum Swaps to Group All 1's Together II: lc/2134.md
    - 2135. Count Words Obtained After Adding a Letter: lc/2135.md
    - 2136. Earliest Possible Day of Full Bloom: lc/2136.md
    - 2137. Pour Water Between Buckets to Make Water Levels Equal: lc/2137.md
    - 2138. Divide a String Into Groups of Size k: lc/2138.md
    - 2139. Minimum Moves to Reach Target Score: lc/2139.md
    - 2140. Solving Questions With Brainpower: lc/2140.md
    - 2141. Maximum Running Time of N Computers: lc/2141.md
    - 2142. The Number of Passengers in Each Bus I: lc/2142.md
    - 2143. Choose Numbers From Two Arrays in Range: lc/2143.md
    - 2144. Minimum Cost of Buying Candies With Discount: lc/2144.md
    - 2145. Count the Hidden Sequences: lc/2145.md
    - 2146. K Highest Ranked Items Within a Price Range: lc/2146.md
    - 2147. Number of Ways to Divide a Long Corridor: lc/2147.md
    - 2148. Count Elements With Strictly Smaller and Greater Elements: lc/2148.md
    - 2149. Rearrange Array Elements by Sign: lc/2149.md
    - 2150. Find All Lonely Numbers in the Array: lc/2150.md
    - 2151. Maximum Good People Based on Statements: lc/2151.md
    - 2152. Minimum Number of Lines to Cover Points: lc/2152.md
    - 2153. The Number of Passengers in Each Bus II: lc/2153.md
    - 2154. Keep Multiplying Found Values by Two: lc/2154.md
    - 2155. All Divisions With the Highest Score of a Binary Array: lc/2155.md
    - 2156. Find Substring With Given Hash Value: lc/2156.md
    - 2157. Groups of Strings: lc/2157.md
    - 2158. Amount of New Area Painted Each Day: lc/2158.md
    - 2159. Order Two Columns Independently: lc/2159.md
    - 2160. Minimum Sum of Four Digit Number After Splitting Digits: lc/2160.md
    - 2161. Partition Array According to Given Pivot: lc/2161.md
    - 2162. Minimum Cost to Set Cooking Time: lc/2162.md
    - 2163. Minimum Difference in Sums After Removal of Elements: lc/2163.md
    - 2164. Sort Even and Odd Indices Independently: lc/2164.md
    - 2165. Smallest Value of the Rearranged Number: lc/2165.md
    - 2166. Design Bitset: lc/2166.md
    - 2167. Minimum Time to Remove All Cars Containing Illegal Goods: lc/2167.md
    - 2168. Unique Substrings With Equal Digit Frequency: lc/2168.md
    - 2169. Count Operations to Obtain Zero: lc/2169.md
    - 2170. Minimum Operations to Make the Array Alternating: lc/2170.md
    - 2171. Removing Minimum Number of Magic Beans: lc/2171.md
    - 2172. Maximum AND Sum of Array: lc/2172.md
    - 2173. Longest Winning Streak: lc/2173.md
    - 2174. Remove All Ones With Row and Column Flips II: lc/2174.md
    - 2175. The Change in Global Rankings: lc/2175.md
    - 2176. Count Equal and Divisible Pairs in an Array: lc/2176.md
    - 2177. Find Three Consecutive Integers That Sum to a Given Number: lc/2177.md
    - 2178. Maximum Split of Positive Even Integers: lc/2178.md
    - 2179. Count Good Triplets in an Array: lc/2179.md
    - 2180. Count Integers With Even Digit Sum: lc/2180.md
    - 2181. Merge Nodes in Between Zeros: lc/2181.md
    - 2182. Construct String With Repeat Limit: lc/2182.md
    - 2183. Count Array Pairs Divisible by K: lc/2183.md
    - 2184. Number of Ways to Build Sturdy Brick Wall: lc/2184.md
    - 2185. Counting Words With a Given Prefix: lc/2185.md
    - 2186. Minimum Number of Steps to Make Two Strings Anagram II: lc/2186.md
    - 2187. Minimum Time to Complete Trips: lc/2187.md
    - 2188. Minimum Time to Finish the Race: lc/2188.md
    - 2189. Number of Ways to Build House of Cards: lc/2189.md
    - 2190. Most Frequent Number Following Key In an Array: lc/2190.md
    - 2191. Sort the Jumbled Numbers: lc/2191.md
    - 2192. All Ancestors of a Node in a Directed Acyclic Graph: lc/2192.md
    - 2193. Minimum Number of Moves to Make Palindrome: lc/2193.md
    - 2194. Cells in a Range on an Excel Sheet: lc/2194.md
    - 2195. Append K Integers With Minimal Sum: lc/2195.md
    - 2196. Create Binary Tree From Descriptions: lc/2196.md
    - 2197. Replace Non-Coprime Numbers in Array: lc/2197.md
    - 2198. Number of Single Divisor Triplets: lc/2198.md
    - 2199. Finding the Topic of Each Post: lc/2199.md
    - 2200. Find All K-Distant Indices in an Array: lc/2200.md
    - 2201. Count Artifacts That Can Be Extracted: lc/2201.md
    - 2202. Maximize the Topmost Element After K Moves: lc/2202.md
    - 2203. Minimum Weighted Subgraph With the Required Paths: lc/2203.md
    - 2204. Distance to a Cycle in Undirected Graph: lc/2204.md
    - 2205. The Number of Users That Are Eligible for Discount: lc/2205.md
    - 2206. Divide Array Into Equal Pairs: lc/2206.md
    - 2207. Maximize Number of Subsequences in a String: lc/2207.md
    - 2208. Minimum Operations to Halve Array Sum: lc/2208.md
    - 2209. Minimum White Tiles After Covering With Carpets: lc/2209.md
    - 2210. Count Hills and Valleys in an Array: lc/2210.md
    - 2211. Count Collisions on a Road: lc/2211.md
    - 2212. Maximum Points in an Archery Competition: lc/2212.md
    - 2213. Longest Substring of One Repeating Character: lc/2213.md
    - 2214. Minimum Health to Beat Game: lc/2214.md
    - 2215. Find the Difference of Two Arrays: lc/2215.md
    - 2216. Minimum Deletions to Make Array Beautiful: lc/2216.md
    - 2217. Find Palindrome With Fixed Length: lc/2217.md
    - 2218. Maximum Value of K Coins From Piles: lc/2218.md
    - 2219. Maximum Sum Score of Array: lc/2219.md
    - 2220. Minimum Bit Flips to Convert Number: lc/2220.md
    - 2221. Find Triangular Sum of an Array: lc/2221.md
    - 2222. Number of Ways to Select Buildings: lc/2222.md
    - 2223. Sum of Scores of Built Strings: lc/2223.md
    - 2224. Minimum Number of Operations to Convert Time: lc/2224.md
    - 2225. Find Players With Zero or One Losses: lc/2225.md
    - 2226. Maximum Candies Allocated to K Children: lc/2226.md
    - 2227. Encrypt and Decrypt Strings: lc/2227.md
    - 2228. Users With Two Purchases Within Seven Days: lc/2228.md
    - 2229. Check if an Array Is Consecutive: lc/2229.md
    - 2230. The Users That Are Eligible for Discount: lc/2230.md
    - 2231. Largest Number After Digit Swaps by Parity: lc/2231.md
    - 2232. Minimize Result by Adding Parentheses to Expression: lc/2232.md
    - 2233. Maximum Product After K Increments: lc/2233.md
    - 2234. Maximum Total Beauty of the Gardens: lc/2234.md
    - 2235. Add Two Integers: lc/2235.md
    - 2236. Root Equals Sum of Children: lc/2236.md
    - 2237. Count Positions on Street With Required Brightness: lc/2237.md
    - 2238. Number of Times a Driver Was a Passenger: lc/2238.md
    - 2239. Find Closest Number to Zero: lc/2239.md
    - 2240. Number of Ways to Buy Pens and Pencils: lc/2240.md
    - 2241. Design an ATM Machine: lc/2241.md
    - 2242. Maximum Score of a Node Sequence: lc/2242.md
    - 2243. Calculate Digit Sum of a String: lc/2243.md
    - 2244. Minimum Rounds to Complete All Tasks: lc/2244.md
    - 2245. Maximum Trailing Zeros in a Cornered Path: lc/2245.md
    - 2246. Longest Path With Different Adjacent Characters: lc/2246.md
    - 2247. Maximum Cost of Trip With K Highways: lc/2247.md
    - 2248. Intersection of Multiple Arrays: lc/2248.md
    - 2249. Count Lattice Points Inside a Circle: lc/2249.md
    - 2250. Count Number of Rectangles Containing Each Point: lc/2250.md
    - 2251. Number of Flowers in Full Bloom: lc/2251.md
    - 2252. Dynamic Pivoting of a Table: lc/2252.md
    - 2253. Dynamic Unpivoting of a Table: lc/2253.md
    - 2254. Design Video Sharing Platform: lc/2254.md
    - 2255. Count Prefixes of a Given String: lc/2255.md
    - 2256. Minimum Average Difference: lc/2256.md
    - 2257. Count Unguarded Cells in the Grid: lc/2257.md
    - 2258. Escape the Spreading Fire: lc/2258.md
    - 2259. Remove Digit From Number to Maximize Result: lc/2259.md
    - 2260. Minimum Consecutive Cards to Pick Up: lc/2260.md
    - 2261. K Divisible Elements Subarrays: lc/2261.md
    - 2262. Total Appeal of A String: lc/2262.md
    - 2263. Make Array Non-decreasing or Non-increasing: lc/2263.md
    - 2264. Largest 3-Same-Digit Number in String: lc/2264.md
    - 2265. Count Nodes Equal to Average of Subtree: lc/2265.md
    - 2266. Count Number of Texts: lc/2266.md
    - 2267. Check if There Is a Valid Parentheses String Path: lc/2267.md
    - 2268. Minimum Number of Keypresses: lc/2268.md
    - 2269. Find the K-Beauty of a Number: lc/2269.md
    - 2270. Number of Ways to Split Array: lc/2270.md
    - 2271. Maximum White Tiles Covered by a Carpet: lc/2271.md
    - 2272. Substring With Largest Variance: lc/2272.md
    - 2273. Find Resultant Array After Removing Anagrams: lc/2273.md
    - 2274. Maximum Consecutive Floors Without Special Floors: lc/2274.md
    - 2275. Largest Combination With Bitwise AND Greater Than Zero: lc/2275.md
    - 2276. Count Integers in Intervals: lc/2276.md
    - 2277. Closest Node to Path in Tree: lc/2277.md
    - 2278. Percentage of Letter in String: lc/2278.md
    - 2279. Maximum Bags With Full Capacity of Rocks: lc/2279.md
    - 2280. Minimum Lines to Represent a Line Chart: lc/2280.md
    - 2281. Sum of Total Strength of Wizards: lc/2281.md
    - 2282. Number of People That Can Be Seen in a Grid: lc/2282.md
    - 2283. Check if Number Has Equal Digit Count and Digit Value: lc/2283.md
    - 2284. Sender With Largest Word Count: lc/2284.md
    - 2285. Maximum Total Importance of Roads: lc/2285.md
    - 2286. Booking Concert Tickets in Groups: lc/2286.md
    - 2287. Rearrange Characters to Make Target String: lc/2287.md
    - 2288. Apply Discount to Prices: lc/2288.md
    - 2289. Steps to Make Array Non-decreasing: lc/2289.md
    - 2290. Minimum Obstacle Removal to Reach Corner: lc/2290.md
    - 2291. Maximum Profit From Trading Stocks: lc/2291.md
    - 2292. Products With Three or More Orders in Two Consecutive Years: lc/2292.md
    - 2293. Min Max Game: lc/2293.md
    - 2294. Partition Array Such That Maximum Difference Is K: lc/2294.md
    - 2295. Replace Elements in an Array: lc/2295.md
    - 2296. Design a Text Editor: lc/2296.md
    - 2297. Jump Game VIII: lc/2297.md
    - 2298. Tasks Count in the Weekend: lc/2298.md
    - 2299. Strong Password Checker II: lc/2299.md
    - 2300. Successful Pairs of Spells and Potions: lc/2300.md
    - 2301. Match Substring After Replacement: lc/2301.md
    - 2302. Count Subarrays With Score Less Than K: lc/2302.md
    - 2303. Calculate Amount Paid in Taxes: lc/2303.md
    - 2304. Minimum Path Cost in a Grid: lc/2304.md
    - 2305. Fair Distribution of Cookies: lc/2305.md
    - 2306. Naming a Company: lc/2306.md
    - 2307. Check for Contradictions in Equations: lc/2307.md
    - 2308. Arrange Table by Gender: lc/2308.md
    - 2309. Greatest English Letter in Upper and Lower Case: lc/2309.md
    - 2310. Sum of Numbers With Units Digit K: lc/2310.md
    - 2311. Longest Binary Subsequence Less Than or Equal to K: lc/2311.md
    - 2312. Selling Pieces of Wood: lc/2312.md
    - 2313. Minimum Flips in Binary Tree to Get Result: lc/2313.md
    - 2314. The First Day of the Maximum Recorded Degree in Each City: lc/2314.md
    - 2315. Count Asterisks: lc/2315.md
    - 2316. Count Unreachable Pairs of Nodes in an Undirected Graph: lc/2316.md
    - 2317. Maximum XOR After Operations: lc/2317.md
    - 2318. Number of Distinct Roll Sequences: lc/2318.md
    - 2319. Check if Matrix Is X-Matrix: lc/2319.md
    - 2320. Count Number of Ways to Place Houses: lc/2320.md
    - 2321. Maximum Score Of Spliced Array: lc/2321.md
    - 2322. Minimum Score After Removals on a Tree: lc/2322.md
    - 2323. Find Minimum Time to Finish All Jobs II: lc/2323.md
    - 2324. Product Sales Analysis IV: lc/2324.md
    - 2325. Decode the Message: lc/2325.md
    - 2326. Spiral Matrix IV: lc/2326.md
    - 2327. Number of People Aware of a Secret: lc/2327.md
    - 2328. Number of Increasing Paths in a Grid: lc/2328.md
    - 2329. Product Sales Analysis V: lc/2329.md
    - 2330. Valid Palindrome IV: lc/2330.md
    - 2331. Evaluate Boolean Binary Tree: lc/2331.md
    - 2332. The Latest Time to Catch a Bus: lc/2332.md
    - 2333. Minimum Sum of Squared Difference: lc/2333.md
    - 2334. Subarray With Elements Greater Than Varying Threshold: lc/2334.md
    - 2335. Minimum Amount of Time to Fill Cups: lc/2335.md
    - 2336. Smallest Number in Infinite Set: lc/2336.md
    - 2337. Move Pieces to Obtain a String: lc/2337.md
    - 2338. Count the Number of Ideal Arrays: lc/2338.md
    - 2339. All the Matches of the League: lc/2339.md
    - 2340. Minimum Adjacent Swaps to Make a Valid Array: lc/2340.md
    - 2341. Maximum Number of Pairs in Array: lc/2341.md
    - 2342. Max Sum of a Pair With Equal Sum of Digits: lc/2342.md
    - 2343. Query Kth Smallest Trimmed Number: lc/2343.md
    - 2344. Minimum Deletions to Make Array Divisible: lc/2344.md
    - 2345. Finding the Number of Visible Mountains: lc/2345.md
    - 2346. Compute the Rank as a Percentage: lc/2346.md
    - 2347. Best Poker Hand: lc/2347.md
    - 2348. Number of Zero-Filled Subarrays: lc/2348.md
    - 2349. Design a Number Container System: lc/2349.md
    - 2350. Shortest Impossible Sequence of Rolls: lc/2350.md
    - 2351. First Letter to Appear Twice: lc/2351.md
    - 2352. Equal Row and Column Pairs: lc/2352.md
    - 2353. Design a Food Rating System: lc/2353.md
    - 2354. Number of Excellent Pairs: lc/2354.md
    - 2355. Maximum Number of Books You Can Take: lc/2355.md
    - 2356. Number of Unique Subjects Taught by Each Teacher: lc/2356.md
    - 2357. Make Array Zero by Subtracting Equal Amounts: lc/2357.md
    - 2358. Maximum Number of Groups Entering a Competition: lc/2358.md
    - 2359. Find Closest Node to Given Two Nodes: lc/2359.md
    - 2360. Longest Cycle in a Graph: lc/2360.md
    - 2361. Minimum Costs Using the Train Line: lc/2361.md
    - 2362. Generate the Invoice: lc/2362.md
    - 2363. Merge Similar Items: lc/2363.md
    - 2364. Count Number of Bad Pairs: lc/2364.md
    - 2365. Task Scheduler II: lc/2365.md
    - 2366. Minimum Replacements to Sort the Array: lc/2366.md
    - 2367. Number of Arithmetic Triplets: lc/2367.md
    - 2368. Reachable Nodes With Restrictions: lc/2368.md
    - 2369. Check if There is a Valid Partition For The Array: lc/2369.md
    - 2370. Longest Ideal Subsequence: lc/2370.md
    - 2371. Minimize Maximum Value in a Grid: lc/2371.md
    - 2372. Calculate the Influence of Each Salesperson: lc/2372.md
    - 2373. Largest Local Values in a Matrix: lc/2373.md
    - 2374. Node With Highest Edge Score: lc/2374.md
    - 2375. Construct Smallest Number From DI String: lc/2375.md
    - 2376. Count Special Integers: lc/2376.md
    - 2377. Sort the Olympic Table: lc/2377.md
    - 2378. Choose Edges to Maximize Score in a Tree: lc/2378.md
    - 2379. Minimum Recolors to Get K Consecutive Black Blocks: lc/2379.md
    - 2380. Time Needed to Rearrange a Binary String: lc/2380.md
    - 2381. Shifting Letters II: lc/2381.md
    - 2382. Maximum Segment Sum After Removals: lc/2382.md
    - 2383. Minimum Hours of Training to Win a Competition: lc/2383.md
    - 2384. Largest Palindromic Number: lc/2384.md
    - 2385. Amount of Time for Binary Tree to Be Infected: lc/2385.md
    - 2386. Find the K-Sum of an Array: lc/2386.md
    - 2387. Median of a Row Wise Sorted Matrix: lc/2387.md
    - 2388. Change Null Values in a Table to the Previous Value: lc/2388.md
    - 2389. Longest Subsequence With Limited Sum: lc/2389.md
    - 2390. Removing Stars From a String: lc/2390.md
    - 2391. Minimum Amount of Time to Collect Garbage: lc/2391.md
    - 2392. Build a Matrix With Conditions: lc/2392.md
    - 2393. Count Strictly Increasing Subarrays: lc/2393.md
    - 2394. Employees With Deductions: lc/2394.md
    - 2395. Find Subarrays With Equal Sum: lc/2395.md
    - 2396. Strictly Palindromic Number: lc/2396.md
    - 2397. Maximum Rows Covered by Columns: lc/2397.md
    - 2398. Maximum Number of Robots Within Budget: lc/2398.md
    - 2399. Check Distances Between Same Letters: lc/2399.md
    - 2400. Number of Ways to Reach a Position After Exactly k Steps: lc/2400.md
    - 2401. Longest Nice Subarray: lc/2401.md
    - 2402. Meeting Rooms III: lc/2402.md
    - 2403. Minimum Time to Kill All Monsters: lc/2403.md
    - 2404. Most Frequent Even Element: lc/2404.md
    - 2405. Optimal Partition of String: lc/2405.md
    - 2406. Divide Intervals Into Minimum Number of Groups: lc/2406.md
    - 2407. Longest Increasing Subsequence II: lc/2407.md
    - 2408. Design SQL: lc/2408.md
    - 2409. Count Days Spent Together: lc/2409.md
    - 2410. Maximum Matching of Players With Trainers: lc/2410.md
    - 2411. Smallest Subarrays With Maximum Bitwise OR: lc/2411.md
    - 2412. Minimum Money Required Before Transactions: lc/2412.md
    - 2413. Smallest Even Multiple: lc/2413.md
    - 2414. Length of the Longest Alphabetical Continuous Substring: lc/2414.md
    - 2415. Reverse Odd Levels of Binary Tree: lc/2415.md
    - 2416. Sum of Prefix Scores of Strings: lc/2416.md
    - 2417. Closest Fair Integer: lc/2417.md
    - 2418. Sort the People: lc/2418.md
    - 2419. Longest Subarray With Maximum Bitwise AND: lc/2419.md
    - 2420. Find All Good Indices: lc/2420.md
    - 2421. Number of Good Paths: lc/2421.md
    - 2422. Merge Operations to Turn Array Into a Palindrome: lc/2422.md
    - 2423. Remove Letter To Equalize Frequency: lc/2423.md
    - 2424. Longest Uploaded Prefix: lc/2424.md
    - 2425. Bitwise XOR of All Pairings: lc/2425.md
    - 2426. Number of Pairs Satisfying Inequality: lc/2426.md
    - 2427. Number of Common Factors: lc/2427.md
    - 2428. Maximum Sum of an Hourglass: lc/2428.md
    - 2429. Minimize XOR: lc/2429.md
    - 2430. Maximum Deletions on a String: lc/2430.md
    - 2431. Maximize Total Tastiness of Purchased Fruits: lc/2431.md
    - 2432. The Employee That Worked on the Longest Task: lc/2432.md
    - 2433. Find The Original Array of Prefix Xor: lc/2433.md
    - 2434. Using a Robot to Print the Lexicographically Smallest String: lc/2434.md
    - 2435. Paths in Matrix Whose Sum Is Divisible by K: lc/2435.md
    - 2436. Minimum Split Into Subarrays With GCD Greater Than One: lc/2436.md
    - 2437. Number of Valid Clock Times: lc/2437.md
    - 2438. Range Product Queries of Powers: lc/2438.md
    - 2439. Minimize Maximum of Array: lc/2439.md
    - 2440. Create Components With Same Value: lc/2440.md
    - 2441. Largest Positive Integer That Exists With Its Negative: lc/2441.md
    - 2442. Count Number of Distinct Integers After Reverse Operations: lc/2442.md
    - 2443. Sum of Number and Its Reverse: lc/2443.md
    - 2444. Count Subarrays With Fixed Bounds: lc/2444.md
    - 2445. Number of Nodes With Value One: lc/2445.md
    - 2446. Determine if Two Events Have Conflict: lc/2446.md
    - 2447. Number of Subarrays With GCD Equal to K: lc/2447.md
    - 2448. Minimum Cost to Make Array Equal: lc/2448.md
    - 2449. Minimum Number of Operations to Make Arrays Similar: lc/2449.md
    - 2450. Number of Distinct Binary Strings After Applying Operations: lc/2450.md
    - 2451. Odd String Difference: lc/2451.md
    - 2452. Words Within Two Edits of Dictionary: lc/2452.md
    - 2453. Destroy Sequential Targets: lc/2453.md
    - 2454. Next Greater Element IV: lc/2454.md
    - 2455. Average Value of Even Numbers That Are Divisible by Three: lc/2455.md
    - 2456. Most Popular Video Creator: lc/2456.md
    - 2457. Minimum Addition to Make Integer Beautiful: lc/2457.md
    - 2458. Height of Binary Tree After Subtree Removal Queries: lc/2458.md
    - 2459. Sort Array by Moving Items to Empty Space: lc/2459.md
    - 2460. Apply Operations to an Array: lc/2460.md
    - 2461. Maximum Sum of Distinct Subarrays With Length K: lc/2461.md
    - 2462. Total Cost to Hire K Workers: lc/2462.md
    - 2463. Minimum Total Distance Traveled: lc/2463.md
    - 2464. Minimum Subarrays in a Valid Split: lc/2464.md
    - 2465. Number of Distinct Averages: lc/2465.md
    - 2466. Count Ways To Build Good Strings: lc/2466.md
    - 2467. Most Profitable Path in a Tree: lc/2467.md
    - 2468. Split Message Based on Limit: lc/2468.md
    - 2469. Convert the Temperature: lc/2469.md
    - 2470. Number of Subarrays With LCM Equal to K: lc/2470.md
    - 2471. Minimum Number of Operations to Sort a Binary Tree by Level: lc/2471.md
    - 2472. Maximum Number of Non-overlapping Palindrome Substrings: lc/2472.md
    - 2473. Minimum Cost to Buy Apples: lc/2473.md
    - 2474. Customers With Strictly Increasing Purchases: lc/2474.md
    - 2475. Number of Unequal Triplets in Array: lc/2475.md
    - 2476. Closest Nodes Queries in a Binary Search Tree: lc/2476.md
    - 2477. Minimum Fuel Cost to Report to the Capital: lc/2477.md
    - 2478. Number of Beautiful Partitions: lc/2478.md
    - 2479. Maximum XOR of Two Non-Overlapping Subtrees: lc/2479.md
    - 2480. Form a Chemical Bond: lc/2480.md
    - 2481. Minimum Cuts to Divide a Circle: lc/2481.md
    - 2482. Difference Between Ones and Zeros in Row and Column: lc/2482.md
    - 2483. Minimum Penalty for a Shop: lc/2483.md
    - 2484. Count Palindromic Subsequences: lc/2484.md
    - 2485. Find the Pivot Integer: lc/2485.md
    - 2486. Append Characters to String to Make Subsequence: lc/2486.md
    - 2487. Remove Nodes From Linked List: lc/2487.md
    - 2488. Count Subarrays With Median K: lc/2488.md
    - 2489. Number of Substrings With Fixed Ratio: lc/2489.md
    - 2490. Circular Sentence: lc/2490.md
    - 2491. Divide Players Into Teams of Equal Skill: lc/2491.md
    - 2492. Minimum Score of a Path Between Two Cities: lc/2492.md
    - 2493. Divide Nodes Into the Maximum Number of Groups: lc/2493.md
    - 2494. Merge Overlapping Events in the Same Hall: lc/2494.md
    - 2495. Number of Subarrays Having Even Product: lc/2495.md
    - 2496. Maximum Value of a String in an Array: lc/2496.md
    - 2497. Maximum Star Sum of a Graph: lc/2497.md
    - 2498. Frog Jump II: lc/2498.md
    - 2499. Minimum Total Cost to Make Arrays Unequal: lc/2499.md
    - 2500. Delete Greatest Value in Each Row: lc/2500.md
    - 2501. Longest Square Streak in an Array: lc/2501.md
    - 2502. Design Memory Allocator: lc/2502.md
    - 2503. Maximum Number of Points From Grid Queries: lc/2503.md
    - 2504. Concatenate the Name and the Profession: lc/2504.md
    - 2505. Bitwise OR of All Subsequence Sums: lc/2505.md
    - 2506. Count Pairs Of Similar Strings: lc/2506.md
    - 2507. Smallest Value After Replacing With Sum of Prime Factors: lc/2507.md
    - 2508. Add Edges to Make Degrees of All Nodes Even: lc/2508.md
    - 2509. Cycle Length Queries in a Tree: lc/2509.md
    - 2510. Check if There is a Path With Equal Number of 0's And 1's: lc/2510.md
    - 2511. Maximum Enemy Forts That Can Be Captured: lc/2511.md
    - 2512. Reward Top K Students: lc/2512.md
    - 2513. Minimize the Maximum of Two Arrays: lc/2513.md
    - 2514. Count Anagrams: lc/2514.md
    - 2515. Shortest Distance to Target String in a Circular Array: lc/2515.md
    - 2516. Take K of Each Character From Left and Right: lc/2516.md
    - 2517. Maximum Tastiness of Candy Basket: lc/2517.md
    - 2518. Number of Great Partitions: lc/2518.md
    - 2519. Count the Number of K-Big Indices: lc/2519.md
    - 2520. Count the Digits That Divide a Number: lc/2520.md
    - 2521. Distinct Prime Factors of Product of Array: lc/2521.md
    - 2522. Partition String Into Substrings With Values at Most K: lc/2522.md
    - 2523. Closest Prime Numbers in Range: lc/2523.md
    - 2524. Maximum Frequency Score of a Subarray: lc/2524.md
    - 2525. Categorize Box According to Criteria: lc/2525.md
    - 2526. Find Consecutive Integers from a Data Stream: lc/2526.md
    - 2527. Find Xor-Beauty of Array: lc/2527.md
    - 2528. Maximize the Minimum Powered City: lc/2528.md
    - 2529. Maximum Count of Positive Integer and Negative Integer: lc/2529.md
    - 2530. Maximal Score After Applying K Operations: lc/2530.md
    - 2531. Make Number of Distinct Characters Equal: lc/2531.md
    - 2532. Time to Cross a Bridge: lc/2532.md
    - 2533. Number of Good Binary Strings: lc/2533.md
    - 2534. Time Taken to Cross the Door: lc/2534.md
    - 2535. Difference Between Element Sum and Digit Sum of an Array: lc/2535.md
    - 2536. Increment Submatrices by One: lc/2536.md
    - 2537. Count the Number of Good Subarrays: lc/2537.md
    - 2538. Difference Between Maximum and Minimum Price Sum: lc/2538.md
    - 2539. Count the Number of Good Subsequences: lc/2539.md
    - 2540. Minimum Common Value: lc/2540.md
    - 2541. Minimum Operations to Make Array Equal II: lc/2541.md
    - 2542. Maximum Subsequence Score: lc/2542.md
    - 2543. Check if Point Is Reachable: lc/2543.md
    - 2544. Alternating Digit Sum: lc/2544.md
    - 2545. Sort the Students by Their Kth Score: lc/2545.md
    - 2546. Apply Bitwise Operations to Make Strings Equal: lc/2546.md
    - 2547. Minimum Cost to Split an Array: lc/2547.md
    - 2548. Maximum Price to Fill a Bag: lc/2548.md
    - 2549. Count Distinct Numbers on Board: lc/2549.md
    - 2550. Count Collisions of Monkeys on a Polygon: lc/2550.md
    - 2551. Put Marbles in Bags: lc/2551.md
    - 2552. Count Increasing Quadruplets: lc/2552.md
    - 2553. Separate the Digits in an Array: lc/2553.md
    - 2554. Maximum Number of Integers to Choose From a Range I: lc/2554.md
    - 2555. Maximize Win From Two Segments: lc/2555.md
    - 2556. Disconnect Path in a Binary Matrix by at Most One Flip: lc/2556.md
    - 2557. Maximum Number of Integers to Choose From a Range II: lc/2557.md
    - 2558. Take Gifts From the Richest Pile: lc/2558.md
    - 2559. Count Vowel Strings in Ranges: lc/2559.md
    - 2560. House Robber IV: lc/2560.md
    - 2561. Rearranging Fruits: lc/2561.md
    - 2562. Find the Array Concatenation Value: lc/2562.md
    - 2563. Count the Number of Fair Pairs: lc/2563.md
    - 2564. Substring XOR Queries: lc/2564.md
    - 2565. Subsequence With the Minimum Score: lc/2565.md
    - 2566. Maximum Difference by Remapping a Digit: lc/2566.md
    - 2567. Minimum Score by Changing Two Elements: lc/2567.md
    - 2568. Minimum Impossible OR: lc/2568.md
    - 2569. Handling Sum Queries After Update: lc/2569.md
    - 2570. Merge Two 2D Arrays by Summing Values: lc/2570.md
    - 2571. Minimum Operations to Reduce an Integer to 0: lc/2571.md
    - 2572. Count the Number of Square-Free Subsets: lc/2572.md
    - 2573. Find the String with: lc/2573.md
    - 2574. Left and Right Sum Differences: lc/2574.md
    - 2575. Find the Divisibility Array of a String: lc/2575.md
    - 2576. Find the Maximum Number of Marked Indices: lc/2576.md
    - 2577. Minimum Time to Visit a Cell In a Grid: lc/2577.md
    - 2578. Split With Minimum Sum: lc/2578.md
    - 2579. Count Total Number of Colored Cells: lc/2579.md
    - 2580. Count Ways to Group Overlapping Ranges: lc/2580.md
    - 2581. Count Number of Possible Root Nodes: lc/2581.md
    - 2582. Pass the Pillow: lc/2582.md
    - 2583. Kth Largest Sum in a Binary Tree: lc/2583.md
    - 2584. Split the Array to Make Coprime Products: lc/2584.md
    - 2585. Number of Ways to Earn Points: lc/2585.md
    - 2586. Count the Number of Vowel Strings in Range: lc/2586.md
    - 2587. Rearrange Array to Maximize Prefix Score: lc/2587.md
    - 2588. Count the Number of Beautiful Subarrays: lc/2588.md
    - 2589. Minimum Time to Complete All Tasks: lc/2589.md
    - 2590. Design a Todo List: lc/2590.md
    - 2591. Distribute Money to Maximum Children: lc/2591.md
    - 2592. Maximize Greatness of an Array: lc/2592.md
    - 2593. Find Score of an Array After Marking All Elements: lc/2593.md
    - 2594. Minimum Time to Repair Cars: lc/2594.md
    - 2595. Number of Even and Odd Bits: lc/2595.md
    - 2596. Check Knight Tour Configuration: lc/2596.md
    - 2597. The Number of Beautiful Subsets: lc/2597.md
    - 2598. Smallest Missing Non-negative Integer After Operations: lc/2598.md
    - 2599. Make the Prefix Sum Non-negative: lc/2599.md
    - 2600. K Items With the Maximum Sum: lc/2600.md
    - 2601. Prime Subtraction Operation: lc/2601.md
    - 2602. Minimum Operations to Make All Array Elements Equal: lc/2602.md
    - 2603. Collect Coins in a Tree: lc/2603.md
    - 2604. Minimum Time to Eat All Grains: lc/2604.md
    - 2605. Form Smallest Number From Two Digit Arrays: lc/2605.md
    - 2606. Find the Substring With Maximum Cost: lc/2606.md
    - 2607. Make K-Subarray Sums Equal: lc/2607.md
    - 2608. Shortest Cycle in a Graph: lc/2608.md
    - 2609. Find the Longest Balanced Substring of a Binary String: lc/2609.md
    - 2610. Convert an Array Into a 2D Array With Conditions: lc/2610.md
    - 2611. Mice and Cheese: lc/2611.md
    - 2612. Minimum Reverse Operations: lc/2612.md
    - 2613. Beautiful Pairs: lc/2613.md
    - 2614. Prime In Diagonal: lc/2614.md
    - 2615. Sum of Distances: lc/2615.md
    - 2616. Minimize the Maximum Difference of Pairs: lc/2616.md
    - 2617. Minimum Number of Visited Cells in a Grid: lc/2617.md
    - 2618. Check if Object Instance of Class: lc/2618.md
    - 2619. Array Prototype Last: lc/2619.md
    - 2620. Counter: lc/2620.md
    - 2621. Sleep: lc/2621.md
    - 2622. Cache With Time Limit: lc/2622.md
    - 2623. Memoize: lc/2623.md
    - 2624. Snail Traversal: lc/2624.md
    - 2625. Flatten Deeply Nested Array: lc/2625.md
    - 2626. Array Reduce Transformation: lc/2626.md
    - 2627. Debounce: lc/2627.md
    - 2628. JSON Deep Equal: lc/2628.md
    - 2629. Function Composition: lc/2629.md
    - 2630. Memoize II: lc/2630.md
    - 2631. Group By: lc/2631.md
    - 2632. Curry: lc/2632.md
    - 2633. Convert Object to JSON String: lc/2633.md
    - 2634. Filter Elements from Array: lc/2634.md
    - 2635. Apply Transform Over Each Element in Array: lc/2635.md
    - 2636. Promise Pool: lc/2636.md
    - 2637. Promise Time Limit: lc/2637.md
    - 2638. Count the Number of K-Free Subsets: lc/2638.md
    - 2639. Find the Width of Columns of a Grid: lc/2639.md
    - 2640. Find the Score of All Prefixes of an Array: lc/2640.md
    - 2641. Cousins in Binary Tree II: lc/2641.md
    - 2642. Design Graph With Shortest Path Calculator: lc/2642.md
    - 2643. Row With Maximum Ones: lc/2643.md
    - 2644. Find the Maximum Divisibility Score: lc/2644.md
    - 2645. Minimum Additions to Make Valid String: lc/2645.md
    - 2646. Minimize the Total Price of the Trips: lc/2646.md
    - 2647. Color the Triangle Red: lc/2647.md
    - 2648. Generate Fibonacci Sequence: lc/2648.md
    - 2649. Nested Array Generator: lc/2649.md
    - 2650. Design Cancellable Function: lc/2650.md
    - 2651. Calculate Delayed Arrival Time: lc/2651.md
    - 2652. Sum Multiples: lc/2652.md
    - 2653. Sliding Subarray Beauty: lc/2653.md
    - 2654. Minimum Number of Operations to Make All Array Elements Equal to 1: lc/2654.md
    - 2655. Find Maximal Uncovered Ranges: lc/2655.md
    - 2656. Maximum Sum With Exactly K Elements: lc/2656.md
    - 2657. Find the Prefix Common Array of Two Arrays: lc/2657.md
    - 2658. Maximum Number of Fish in a Grid: lc/2658.md
    - 2659. Make Array Empty: lc/2659.md
    - 2660. Determine the Winner of a Bowling Game: lc/2660.md
    - 2661. First Completely Painted Row or Column: lc/2661.md
    - 2662. Minimum Cost of a Path With Special Roads: lc/2662.md
    - 2663. Lexicographically Smallest Beautiful String: lc/2663.md
    - 2664. The Knight’s Tour: lc/2664.md
    - 2665. Counter II: lc/2665.md
    - 2666. Allow One Function Call: lc/2666.md
    - 2667. Create Hello World Function: lc/2667.md
    - 2668. Find Latest Salaries: lc/2668.md
    - 2669. Count Artist Occurrences On Spotify Ranking List: lc/2669.md
    - 2670. Find the Distinct Difference Array: lc/2670.md
    - 2671. Frequency Tracker: lc/2671.md
    - 2672. Number of Adjacent Elements With the Same Color: lc/2672.md
    - 2673. Make Costs of Paths Equal in a Binary Tree: lc/2673.md
    - 2674. Split a Circular Linked List: lc/2674.md
    - 2675. Array of Objects to Matrix: lc/2675.md
    - 2676. Throttle: lc/2676.md
    - 2677. Chunk Array: lc/2677.md
    - 2678. Number of Senior Citizens: lc/2678.md
    - 2679. Sum in a Matrix: lc/2679.md
    - 2680. Maximum OR: lc/2680.md
    - 2681. Power of Heroes: lc/2681.md
    - 2682. Find the Losers of the Circular Game: lc/2682.md
    - 2683. Neighboring Bitwise XOR: lc/2683.md
    - 2684. Maximum Number of Moves in a Grid: lc/2684.md
    - 2685. Count the Number of Complete Components: lc/2685.md
    - 2686. Immediate Food Delivery III: lc/2686.md
    - 2687. Bikes Last Time Used: lc/2687.md
    - 2688. Find Active Users: lc/2688.md
    - 2689. Extract Kth Character From The Rope Tree: lc/2689.md
    - 2690. Infinite Method Object: lc/2690.md
    - 2691. Immutability Helper: lc/2691.md
    - 2692. Make Object Immutable: lc/2692.md
    - 2693. Call Function with Custom Context: lc/2693.md
    - 2694. Event Emitter: lc/2694.md
    - 2695. Array Wrapper: lc/2695.md
    - 2696. Minimum String Length After Removing Substrings: lc/2696.md
    - 2697. Lexicographically Smallest Palindrome: lc/2697.md
    - 2698. Find the Punishment Number of an Integer: lc/2698.md
    - 2699. Modify Graph Edge Weights: lc/2699.md
    - 2700. Differences Between Two Objects: lc/2700.md
    - 2701. Consecutive Transactions with Increasing Amounts: lc/2701.md
    - 2702. Minimum Operations to Make Numbers Non-positive: lc/2702.md
    - 2703. Return Length of Arguments Passed: lc/2703.md
    - 2704. To Be Or Not To Be: lc/2704.md
    - 2705. Compact Object: lc/2705.md
    - 2706. Buy Two Chocolates: lc/2706.md
    - 2707. Extra Characters in a String: lc/2707.md
    - 2708. Maximum Strength of a Group: lc/2708.md
    - 2709. Greatest Common Divisor Traversal: lc/2709.md
    - 2710. Remove Trailing Zeros From a String: lc/2710.md
    - 2711. Difference of Number of Distinct Values on Diagonals: lc/2711.md
    - 2712. Minimum Cost to Make All Characters Equal: lc/2712.md
    - 2713. Maximum Strictly Increasing Cells in a Matrix: lc/2713.md
    - 2714. Find Shortest Path with K Hops: lc/2714.md
    - 2715. Timeout Cancellation: lc/2715.md
    - 2716. Minimize String Length: lc/2716.md
    - 2717. Semi-Ordered Permutation: lc/2717.md
    - 2718. Sum of Matrix After Queries: lc/2718.md
    - 2719. Count of Integers: lc/2719.md
    - 2720. Popularity Percentage: lc/2720.md
    - 2721. Execute Asynchronous Functions in Parallel: lc/2721.md
    - 2722. Join Two Arrays by ID: lc/2722.md
    - 2723. Add Two Promises: lc/2723.md
    - 2724. Sort By: lc/2724.md
    - 2725. Interval Cancellation: lc/2725.md
    - 2726. Calculator with Method Chaining: lc/2726.md
    - 2727. Is Object Empty: lc/2727.md
    - 2728. Count Houses in a Circular Street: lc/2728.md
    - 2729. Check if The Number is Fascinating: lc/2729.md
    - 2730. Find the Longest Semi-Repetitive Substring: lc/2730.md
    - 2731. Movement of Robots: lc/2731.md
    - 2732. Find a Good Subset of the Matrix: lc/2732.md
    - 2733. Neither Minimum nor Maximum: lc/2733.md
    - 2734. Lexicographically Smallest String After Substring Operation: lc/2734.md
    - 2735. Collecting Chocolates: lc/2735.md
    - 2736. Maximum Sum Queries: lc/2736.md
    - 2737. Find the Closest Marked Node: lc/2737.md
    - 2738. Count Occurrences in Text: lc/2738.md
    - 2739. Total Distance Traveled: lc/2739.md
    - 2740. Find the Value of the Partition: lc/2740.md
    - 2741. Special Permutations: lc/2741.md
    - 2742. Painting the Walls: lc/2742.md
    - 2743. Count Substrings Without Repeating Character: lc/2743.md
    - 2744. Find Maximum Number of String Pairs: lc/2744.md
    - 2745. Construct the Longest New String: lc/2745.md
    - 2746. Decremental String Concatenation: lc/2746.md
    - 2747. Count Zero Request Servers: lc/2747.md
    - 2748. Number of Beautiful Pairs: lc/2748.md
    - 2749. Minimum Operations to Make the Integer Zero: lc/2749.md
    - 2750. Ways to Split Array Into Good Subarrays: lc/2750.md
    - 2751. Robot Collisions: lc/2751.md
    - 2752. Customers with Maximum Number of Transactions on Consecutive Days: lc/2752.md
    - 2753. Count Houses in a Circular Street II: lc/2753.md
    - 2754. Bind Function to Context: lc/2754.md
    - 2755. Deep Merge of Two Objects: lc/2755.md
    - 2756. Query Batching: lc/2756.md
    - 2757. Generate Circular Array Values: lc/2757.md
    - 2758. Next Day: lc/2758.md
    - 2759. Convert JSON String to Object: lc/2759.md
    - 2760. Longest Even Odd Subarray With Threshold: lc/2760.md
    - 2761. Prime Pairs With Target Sum: lc/2761.md
    - 2762. Continuous Subarrays: lc/2762.md
    - 2763. Sum of Imbalance Numbers of All Subarrays: lc/2763.md
    - 2764. Is Array a Preorder of Some ‌Binary Tree: lc/2764.md
    - 2765. Longest Alternating Subarray: lc/2765.md
    - 2766. Relocate Marbles: lc/2766.md
    - 2767. Partition String Into Minimum Beautiful Substrings: lc/2767.md
    - 2768. Number of Black Blocks: lc/2768.md
    - 2769. Find the Maximum Achievable Number: lc/2769.md
    - 2770. Maximum Number of Jumps to Reach the Last Index: lc/2770.md
    - 2771. Longest Non-decreasing Subarray From Two Arrays: lc/2771.md
    - 2772. Apply Operations to Make All Array Elements Equal to Zero: lc/2772.md
    - 2773. Height of Special Binary Tree: lc/2773.md
    - 2774. Array Upper Bound: lc/2774.md
    - 2775. Undefined to Null: lc/2775.md
    - 2776. Convert Callback Based Function to Promise Based Function: lc/2776.md
    - 2777. Date Range Generator: lc/2777.md
    - 2778. Sum of Squares of Special Elements: lc/2778.md
    - 2779. Maximum Beauty of an Array After Applying Operation: lc/2779.md
    - 2780. Minimum Index of a Valid Split: lc/2780.md
    - 2781. Length of the Longest Valid Substring: lc/2781.md
    - 2782. Number of Unique Categories: lc/2782.md
    - 2783. Flight Occupancy and Waitlist Analysis: lc/2783.md
    - 2784. Check if Array is Good: lc/2784.md
    - 2785. Sort Vowels in a String: lc/2785.md
    - 2786. Visit Array Positions to Maximize Score: lc/2786.md
    - 2787. Ways to Express an Integer as Sum of Powers: lc/2787.md
    - 2788. Split Strings by Separator: lc/2788.md
    - 2789. Largest Element in an Array after Merge Operations: lc/2789.md
    - 2790. Maximum Number of Groups With Increasing Length: lc/2790.md
    - 2791. Count Paths That Can Form a Palindrome in a Tree: lc/2791.md
    - 2792. Count Nodes That Are Great Enough: lc/2792.md
    - 2793. Status of Flight Tickets: lc/2793.md
    - 2794. Create Object from Two Arrays: lc/2794.md
    - 2795. Parallel Execution of Promises for Individual Results Retrieval: lc/2795.md
    - 2796. Repeat String: lc/2796.md
    - 2797. Partial Function with Placeholders: lc/2797.md
    - 2798. Number of Employees Who Met the Target: lc/2798.md
    - 2799. Count Complete Subarrays in an Array: lc/2799.md
    - 2800. Shortest String That Contains Three Strings: lc/2800.md
    - 2801. Count Stepping Numbers in Range: lc/2801.md
    - 2802. Find The K-th Lucky Number: lc/2802.md
    - 2803. Factorial Generator: lc/2803.md
    - 2804. Array Prototype ForEach: lc/2804.md
    - 2805. Custom Interval: lc/2805.md
    - 2806. Account Balance After Rounded Purchase: lc/2806.md
    - 2807. Insert Greatest Common Divisors in Linked List: lc/2807.md
    - 2808. Minimum Seconds to Equalize a Circular Array: lc/2808.md
    - 2809. Minimum Time to Make Array Sum At Most x: lc/2809.md
    - 2810. Faulty Keyboard: lc/2810.md
    - 2811. Check if it is Possible to Split Array: lc/2811.md
    - 2812. Find the Safest Path in a Grid: lc/2812.md
    - 2813. Maximum Elegance of a K-Length Subsequence: lc/2813.md
    - 2814. Minimum Time Takes to Reach Destination Without Drowning: lc/2814.md
    - 2815. Max Pair Sum in an Array: lc/2815.md
    - 2816. Double a Number Represented as a Linked List: lc/2816.md
    - 2817. Minimum Absolute Difference Between Elements With Constraint: lc/2817.md
    - 2818. Apply Operations to Maximize Score: lc/2818.md
    - 2819. Minimum Relative Loss After Buying Chocolates: lc/2819.md
    - 2820. Election Results: lc/2820.md
    - 2821. Delay the Resolution of Each Promise: lc/2821.md
    - 2822. Inversion of Object: lc/2822.md
    - 2823. Deep Object Filter: lc/2823.md
    - 2824. Count Pairs Whose Sum is Less than Target: lc/2824.md
    - 2825. Make String a Subsequence Using Cyclic Increments: lc/2825.md
    - 2826. Sorting Three Groups: lc/2826.md
    - 2827. Number of Beautiful Integers in the Range: lc/2827.md
    - 2828. Check if a String Is an Acronym of Words: lc/2828.md
    - 2829. Determine the Minimum Sum of a k-avoiding Array: lc/2829.md
    - 2830. Maximize the Profit as the Salesman: lc/2830.md
    - 2831. Find the Longest Equal Subarray: lc/2831.md
    - 2832. Maximal Range That Each Element Is Maximum in It: lc/2832.md
    - 2833. Furthest Point From Origin: lc/2833.md
    - 2834. Find the Minimum Possible Sum of a Beautiful Array: lc/2834.md
    - 2835. Minimum Operations to Form Subsequence With Target Sum: lc/2835.md
    - 2836. Maximize Value of Function in a Ball Passing Game: lc/2836.md
    - 2837. Total Traveled Distance: lc/2837.md
    - 2838. Maximum Coins Heroes Can Collect: lc/2838.md
    - 2839. Check if Strings Can be Made Equal With Operations I: lc/2839.md
    - 2840. Check if Strings Can be Made Equal With Operations II: lc/2840.md
    - 2841. Maximum Sum of Almost Unique Subarray: lc/2841.md
    - 2842. Count K-Subsequences of a String With Maximum Beauty: lc/2842.md
    - 2843. Count Symmetric Integers: lc/2843.md
    - 2844. Minimum Operations to Make a Special Number: lc/2844.md
    - 2845. Count of Interesting Subarrays: lc/2845.md
    - 2846. Minimum Edge Weight Equilibrium Queries in a Tree: lc/2846.md
    - 2847. Smallest Number With Given Digit Product: lc/2847.md
    - 2848. Points That Intersect With Cars: lc/2848.md
    - 2849. Determine if a Cell Is Reachable at a Given Time: lc/2849.md
    - 2850. Minimum Moves to Spread Stones Over Grid: lc/2850.md
    - 2851. String Transformation: lc/2851.md
    - 2852. Sum of Remoteness of All Cells: lc/2852.md
    - 2853. Highest Salaries Difference: lc/2853.md
    - 2854. Rolling Average Steps: lc/2854.md
    - 2855. Minimum Right Shifts to Sort the Array: lc/2855.md
    - 2856. Minimum Array Length After Pair Removals: lc/2856.md
    - 2857. Count Pairs of Points With Distance k: lc/2857.md
    - 2858. Minimum Edge Reversals So Every Node Is Reachable: lc/2858.md
    - 2859. Sum of Values at Indices With K Set Bits: lc/2859.md
    - 2860. Happy Students: lc/2860.md
    - 2861. Maximum Number of Alloys: lc/2861.md
    - 2862. Maximum Element-Sum of a Complete Subset of Indices: lc/2862.md
    - 2863. Maximum Length of Semi-Decreasing Subarrays: lc/2863.md
    - 2864. Maximum Odd Binary Number: lc/2864.md
    - 2865. Beautiful Towers I: lc/2865.md
    - 2866. Beautiful Towers II: lc/2866.md
    - 2867. Count Valid Paths in a Tree: lc/2867.md
    - 2868. The Wording Game: lc/2868.md
    - 2869. Minimum Operations to Collect Elements: lc/2869.md
    - 2870. Minimum Number of Operations to Make Array Empty: lc/2870.md
    - 2871. Split Array Into Maximum Number of Subarrays: lc/2871.md
    - 2872. Maximum Number of K-Divisible Components: lc/2872.md
    - 2873. Maximum Value of an Ordered Triplet I: lc/2873.md
    - 2874. Maximum Value of an Ordered Triplet II: lc/2874.md
    - 2875. Minimum Size Subarray in Infinite Array: lc/2875.md
    - 2876. Count Visited Nodes in a Directed Graph: lc/2876.md
    - 2877. Create a DataFrame from List: lc/2877.md
    - 2878. Get the Size of a DataFrame: lc/2878.md
    - 2879. Display the First Three Rows: lc/2879.md
    - 2880. Select Data: lc/2880.md
    - 2881. Create a New Column: lc/2881.md
    - 2882. Drop Duplicate Rows: lc/2882.md
    - 2883. Drop Missing Data: lc/2883.md
    - 2884. Modify Columns: lc/2884.md
    - 2885. Rename Columns: lc/2885.md
    - 2886. Change Data Type: lc/2886.md
    - 2887. Fill Missing Data: lc/2887.md
    - 2888. Reshape Data Concatenate: lc/2888.md
    - 2889. Reshape Data Pivot: lc/2889.md
    - 2890. Reshape Data Melt: lc/2890.md
    - 2891. Method Chaining: lc/2891.md
    - 2892. Minimizing Array After Replacing Pairs With Their Product: lc/2892.md
    - 2893. Calculate Orders Within Each Interval: lc/2893.md
    - 2894. Divisible and Non-divisible Sums Difference: lc/2894.md
    - 2895. Minimum Processing Time: lc/2895.md
    - 2896. Apply Operations to Make Two Strings Equal: lc/2896.md
    - 2897. Apply Operations on Array to Maximize Sum of Squares: lc/2897.md
    - 2898. Maximum Linear Stock Score: lc/2898.md
    - 2899. Last Visited Integers: lc/2899.md
    - 2900. Longest Unequal Adjacent Groups Subsequence I: lc/2900.md
    - 2901. Longest Unequal Adjacent Groups Subsequence II: lc/2901.md
    - 2902. Count of Sub-Multisets With Bounded Sum: lc/2902.md
    - 2903. Find Indices With Index and Value Difference I: lc/2903.md
    - 2904. Shortest and Lexicographically Smallest Beautiful String: lc/2904.md
    - 2905. Find Indices With Index and Value Difference II: lc/2905.md
    - 2906. Construct Product Matrix: lc/2906.md
    - 2907. Maximum Profitable Triplets With Increasing Prices I: lc/2907.md
    - 2908. Minimum Sum of Mountain Triplets I: lc/2908.md
    - 2909. Minimum Sum of Mountain Triplets II: lc/2909.md
    - 2910. Minimum Number of Groups to Create a Valid Assignment: lc/2910.md
    - 2911. Minimum Changes to Make K Semi-palindromes: lc/2911.md
    - 2912. Number of Ways to Reach Destination in the Grid: lc/2912.md
    - 2913. Subarrays Distinct Element Sum of Squares I: lc/2913.md
    - 2914. Minimum Number of Changes to Make Binary String Beautiful: lc/2914.md
    - 2915. Length of the Longest Subsequence That Sums to Target: lc/2915.md
    - 2916. Subarrays Distinct Element Sum of Squares II: lc/2916.md
    - 2917. Find the K-or of an Array: lc/2917.md
    - 2918. Minimum Equal Sum of Two Arrays After Replacing Zeros: lc/2918.md
    - 2919. Minimum Increment Operations to Make Array Beautiful: lc/2919.md
    - 2920. Maximum Points After Collecting Coins From All Nodes: lc/2920.md
    - 2921. Maximum Profitable Triplets With Increasing Prices II: lc/2921.md
    - 2922. Market Analysis III: lc/2922.md
    - 2923. Find Champion I: lc/2923.md
    - 2924. Find Champion II: lc/2924.md
    - 2925. Maximum Score After Applying Operations on a Tree: lc/2925.md
    - 2926. Maximum Balanced Subsequence Sum: lc/2926.md
    - 2927. Distribute Candies Among Children III: lc/2927.md
    - 2928. Distribute Candies Among Children I: lc/2928.md
    - 2929. Distribute Candies Among Children II: lc/2929.md
    - 2930. Number of Strings Which Can Be Rearranged to Contain Substring: lc/2930.md
    - 2931. Maximum Spending After Buying Items: lc/2931.md
    - 2932. Maximum Strong Pair XOR I: lc/2932.md
    - 2933. High-Access Employees: lc/2933.md
    - 2934. Minimum Operations to Maximize Last Elements in Arrays: lc/2934.md
    - 2935. Maximum Strong Pair XOR II: lc/2935.md
    - 2936. Number of Equal Numbers Blocks: lc/2936.md
    - 2937. Make Three Strings Equal: lc/2937.md
    - 2938. Separate Black and White Balls: lc/2938.md
    - 2939. Maximum Xor Product: lc/2939.md
    - 2940. Find Building Where Alice and Bob Can Meet: lc/2940.md
    - 2941. Maximum GCD-Sum of a Subarray: lc/2941.md
    - 2942. Find Words Containing Character: lc/2942.md
    - 2943. Maximize Area of Square Hole in Grid: lc/2943.md
    - 2944. Minimum Number of Coins for Fruits: lc/2944.md
    - 2945. Find Maximum Non-decreasing Array Length: lc/2945.md
    - 2946. Matrix Similarity After Cyclic Shifts: lc/2946.md
    - 2947. Count Beautiful Substrings I: lc/2947.md
    - 2948. Make Lexicographically Smallest Array by Swapping Elements: lc/2948.md
    - 2949. Count Beautiful Substrings II: lc/2949.md
    - 2950. Number of Divisible Substrings: lc/2950.md
    - 2951. Find the Peaks: lc/2951.md
    - 2952. Minimum Number of Coins to be Added: lc/2952.md
    - 2953. Count Complete Substrings: lc/2953.md
    - 2954. Count the Number of Infection Sequences: lc/2954.md
    - 2955. Number of Same-End Substrings: lc/2955.md
    - 2956. Find Common Elements Between Two Arrays: lc/2956.md
    - 2957. Remove Adjacent Almost-Equal Characters: lc/2957.md
    - 2958. Length of Longest Subarray With at Most K Frequency: lc/2958.md
    - 2959. Number of Possible Sets of Closing Branches: lc/2959.md
    - 2960. Count Tested Devices After Test Operations: lc/2960.md
    - 2961. Double Modular Exponentiation: lc/2961.md
    - 2962. Count Subarrays Where Max Element Appears at Least K Times: lc/2962.md
    - 2963. Count the Number of Good Partitions: lc/2963.md
    - 2964. Number of Divisible Triplet Sums: lc/2964.md
    - 2965. Find Missing and Repeated Values: lc/2965.md
    - 2966. Divide Array Into Arrays With Max Difference: lc/2966.md
    - 2967. Minimum Cost to Make Array Equalindromic: lc/2967.md
    - 2968. Apply Operations to Maximize Frequency Score: lc/2968.md
    - 2969. Minimum Number of Coins for Fruits II: lc/2969.md
    - 2970. Count the Number of Incremovable Subarrays I: lc/2970.md
    - 2971. Find Polygon With the Largest Perimeter: lc/2971.md
    - 2972. Count the Number of Incremovable Subarrays II: lc/2972.md
    - 2973. Find Number of Coins to Place in Tree Nodes: lc/2973.md
    - 2974. Minimum Number Game: lc/2974.md
    - 2975. Maximum Square Area by Removing Fences From a Field: lc/2975.md
    - 2976. Minimum Cost to Convert String I: lc/2976.md
    - 2977. Minimum Cost to Convert String II: lc/2977.md
    - 2978. Symmetric Coordinates: lc/2978.md
    - 2979. Most Expensive Item That Can Not Be Bought: lc/2979.md
    - 2980. Check if Bitwise OR Has Trailing Zeros: lc/2980.md
    - 2981. Find Longest Special Substring That Occurs Thrice I: lc/2981.md
    - 2982. Find Longest Special Substring That Occurs Thrice II: lc/2982.md
    - 2983. Palindrome Rearrangement Queries: lc/2983.md
    - 2984. Find Peak Calling Hours for Each City: lc/2984.md
    - 2985. Calculate Compressed Mean: lc/2985.md
    - 2986. Find Third Transaction: lc/2986.md
    - 2987. Find Expensive Cities: lc/2987.md
    - 2988. Manager of the Largest Department: lc/2988.md
    - 2989. Class Performance: lc/2989.md
    - 2990. Loan Types: lc/2990.md
    - 2991. Top Three Wineries: lc/2991.md
    - 2992. Number of Self-Divisible Permutations: lc/2992.md
    - 2993. Friday Purchases I: lc/2993.md
    - 2994. Friday Purchases II: lc/2994.md
    - 2995. Viewers Turned Streamers: lc/2995.md
    - 2996. Smallest Missing Integer Greater Than Sequential Prefix Sum: lc/2996.md
    - 2997. Minimum Number of Operations to Make Array XOR Equal to K: lc/2997.md
    - 2998. Minimum Number of Operations to Make X and Y Equal: lc/2998.md
    - 2999. Count the Number of Powerful Integers: lc/2999.md
    - 3000. Maximum Area of Longest Diagonal Rectangle: lc/3000.md
    - 3001. Minimum Moves to Capture The Queen: lc/3001.md
    - 3002. Maximum Size of a Set After Removals: lc/3002.md
    - 3003. Maximize the Number of Partitions After Operations: lc/3003.md
    - 3004. Maximum Subtree of the Same Color: lc/3004.md
    - 3005. Count Elements With Maximum Frequency: lc/3005.md
    - 3006. Find Beautiful Indices in the Given Array I: lc/3006.md
    - 3007. Maximum Number That Sum of the Prices Is Less Than or Equal to K: lc/3007.md
    - 3008. Find Beautiful Indices in the Given Array II: lc/3008.md
  - Cracking the Coding Interview, 6th Edition:
    - 1.1. Is Unique: lcci/1.1.md
    - 1.2. Check Permutation: lcci/1.2.md
    - 1.3. String to URL: lcci/1.3.md
    - 1.4. Palindrome Permutation: lcci/1.4.md
    - 1.5. One Away: lcci/1.5.md
    - 1.6. Compress String: lcci/1.6.md
    - 1.7. Rotate Matrix: lcci/1.7.md
    - 1.8. Zero Matrix: lcci/1.8.md
    - 1.9. String Rotation: lcci/1.9.md
    - 2.1. Remove Duplicate Node: lcci/2.1.md
    - 2.2. Kth Node From End of List: lcci/2.2.md
    - 2.3. Delete Middle Node: lcci/2.3.md
    - 2.4. Partition List: lcci/2.4.md
    - 2.5. Sum Lists: lcci/2.5.md
    - 2.6. Palindrome Linked List: lcci/2.6.md
    - 2.7. Intersection of Two Linked Lists: lcci/2.7.md
    - 2.8. Linked List Cycle: lcci/2.8.md
    - 3.1. Three in One: lcci/3.1.md
    - 3.2. Min Stack: lcci/3.2.md
    - 3.3. Stack of Plates: lcci/3.3.md
    - 3.4. Implement Queue using Stacks: lcci/3.4.md
    - 3.5. Sort of Stacks: lcci/3.5.md
    - 3.6. Animal Shelter: lcci/3.6.md
    - 4.1. Route Between Nodes: lcci/4.1.md
    - 4.2. Minimum Height Tree: lcci/4.2.md
    - 4.3. List of Depth: lcci/4.3.md
    - 4.4. Check Balance: lcci/4.4.md
    - 4.5. Legal Binary Search Tree: lcci/4.5.md
    - 4.6. Successor: lcci/4.6.md
    - 4.8. First Common Ancestor: lcci/4.8.md
    - 4.9. BST Sequences: lcci/4.9.md
    - 4.10. Check SubTree: lcci/4.10.md
    - 4.12. Paths with Sum: lcci/4.12.md
    - 5.1. Insert Into Bits: lcci/5.1.md
    - 5.2. Binary Number to String: lcci/5.2.md
    - 5.3. Reverse Bits: lcci/5.3.md
    - 5.4. Closed Number: lcci/5.4.md
    - 5.6. Convert Integer: lcci/5.6.md
    - 5.7. Exchange: lcci/5.7.md
    - 5.8. Draw Line: lcci/5.8.md
    - 8.1. Three Steps Problem: lcci/8.1.md
    - 8.2. Robot in a Grid: lcci/8.2.md
    - 8.3. Magic Index: lcci/8.3.md
    - 8.4. Power Set: lcci/8.4.md
    - 8.5. Recursive Mulitply: lcci/8.5.md
    - 8.6. Hanota: lcci/8.6.md
    - 8.7. Permutation I: lcci/8.7.md
    - 8.8. Permutation II: lcci/8.8.md
    - 8.9. Bracket: lcci/8.9.md
    - 8.10. Color Fill: lcci/8.10.md
    - 8.11. Coin: lcci/8.11.md
    - 8.12. Eight Queens: lcci/8.12.md
    - 8.13. Pile Box: lcci/8.13.md
    - 8.14. Boolean Evaluation: lcci/8.14.md
    - 10.1. Sorted Merge: lcci/10.1.md
    - 10.2. Group Anagrams: lcci/10.2.md
    - 10.3. Search Rotate Array: lcci/10.3.md
    - 10.5. Sparse Array Search: lcci/10.5.md
    - 10.9. Sorted Matrix Search: lcci/10.9.md
    - 10.10. Rank from Stream: lcci/10.10.md
    - 10.11. Peaks and Valleys: lcci/10.11.md
    - 16.1. Swap Numbers: lcci/16.1.md
    - 16.2. Words Frequency: lcci/16.2.md
    - 16.3. Intersection: lcci/16.3.md
    - 16.4. Tic-Tac-Toe: lcci/16.4.md
    - 16.5. Factorial Zeros: lcci/16.5.md
    - 16.6. Smallest Difference: lcci/16.6.md
    - 16.7. Maximum: lcci/16.7.md
    - 16.8. English Int: lcci/16.8.md
    - 16.9. Operations: lcci/16.9.md
    - 16.10. Living People: lcci/16.10.md
    - 16.11. Diving Board: lcci/16.11.md
    - 16.13. Bisect Squares: lcci/16.13.md
    - 16.14. Best Line: lcci/16.14.md
    - 16.15. Master Mind: lcci/16.15.md
    - 16.16. Sub Sort: lcci/16.16.md
    - 16.17. Contiguous Sequence: lcci/16.17.md
    - 16.18. Pattern Matching: lcci/16.18.md
    - 16.19. Pond Sizes: lcci/16.19.md
    - 16.20. T9: lcci/16.20.md
    - 16.21. Sum Swap: lcci/16.21.md
    - 16.22. Langtons Ant: lcci/16.22.md
    - 16.24. Pairs With Sum: lcci/16.24.md
    - 16.25. LRU Cache: lcci/16.25.md
    - 16.26. Calculator: lcci/16.26.md
    - 17.1. Add Without Plus: lcci/17.1.md
    - 17.4. Missing Number: lcci/17.4.md
    - 17.5. Find Longest Subarray: lcci/17.5.md
    - 17.6. Number Of 2s In Range: lcci/17.6.md
    - 17.7. Baby Names: lcci/17.7.md
    - 17.8. Circus Tower: lcci/17.8.md
    - 17.9. Get Kth Magic Number: lcci/17.9.md
    - 17.10. Find Majority Element: lcci/17.10.md
    - 17.11. Find Closest: lcci/17.11.md
    - 17.12. BiNode: lcci/17.12.md
    - 17.13. Re-Space: lcci/17.13.md
    - 17.14. Smallest K: lcci/17.14.md
    - 17.15. Longest Word: lcci/17.15.md
    - 17.16. The Masseuse: lcci/17.16.md
    - 17.17. Multi Search: lcci/17.17.md
    - 17.18. Shortest Supersequence: lcci/17.18.md
    - 17.19. Missing Two: lcci/17.19.md
    - 17.20. Continuous Median: lcci/17.20.md
    - 17.21. Volume of Histogram: lcci/17.21.md
    - 17.22. Word Transformer: lcci/17.22.md
    - 17.23. Max Black Square: lcci/17.23.md
    - 17.24. Max Submatrix: lcci/17.24.md
    - 17.25. Word Rectangle: lcci/17.25.md
    - 17.26. Sparse Similarity: lcci/17.26.md
